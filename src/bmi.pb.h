// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bmi.proto

#ifndef PROTOBUF_bmi_2eproto__INCLUDED
#define PROTOBUF_bmi_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_bmi_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[36];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsEmptyImpl();
void InitDefaultsEmpty();
void InitDefaultsInitializeRequestImpl();
void InitDefaultsInitializeRequest();
void InitDefaultsUpdateUntilRequestImpl();
void InitDefaultsUpdateUntilRequest();
void InitDefaultsUpdateFracRequestImpl();
void InitDefaultsUpdateFracRequest();
void InitDefaultsGetComponentNameResponseImpl();
void InitDefaultsGetComponentNameResponse();
void InitDefaultsGetVarNameCountResponseImpl();
void InitDefaultsGetVarNameCountResponse();
void InitDefaultsGetVarNamesResponseImpl();
void InitDefaultsGetVarNamesResponse();
void InitDefaultsGetTimeUnitsResponseImpl();
void InitDefaultsGetTimeUnitsResponse();
void InitDefaultsGetTimeStepResponseImpl();
void InitDefaultsGetTimeStepResponse();
void InitDefaultsGetTimeResponseImpl();
void InitDefaultsGetTimeResponse();
void InitDefaultsGetVarRequestImpl();
void InitDefaultsGetVarRequest();
void InitDefaultsGetVarGridResponseImpl();
void InitDefaultsGetVarGridResponse();
void InitDefaultsGetVarTypeResponseImpl();
void InitDefaultsGetVarTypeResponse();
void InitDefaultsGetVarItemSizeResponseImpl();
void InitDefaultsGetVarItemSizeResponse();
void InitDefaultsGetVarUnitsResponseImpl();
void InitDefaultsGetVarUnitsResponse();
void InitDefaultsGetVarNBytesResponseImpl();
void InitDefaultsGetVarNBytesResponse();
void InitDefaultsIntArrayMessageImpl();
void InitDefaultsIntArrayMessage();
void InitDefaultsFloatArrayMessageImpl();
void InitDefaultsFloatArrayMessage();
void InitDefaultsDoubleArrayMessageImpl();
void InitDefaultsDoubleArrayMessage();
void InitDefaultsGetValueResponseImpl();
void InitDefaultsGetValueResponse();
void InitDefaultsGetValueAtIndicesRequestImpl();
void InitDefaultsGetValueAtIndicesRequest();
void InitDefaultsGetValueAtIndicesResponseImpl();
void InitDefaultsGetValueAtIndicesResponse();
void InitDefaultsSetValueRequestImpl();
void InitDefaultsSetValueRequest();
void InitDefaultsSetValuePtrRequestImpl();
void InitDefaultsSetValuePtrRequest();
void InitDefaultsSetValueAtIndicesRequestImpl();
void InitDefaultsSetValueAtIndicesRequest();
void InitDefaultsGridRequestImpl();
void InitDefaultsGridRequest();
void InitDefaultsGetGridSizeResponseImpl();
void InitDefaultsGetGridSizeResponse();
void InitDefaultsGetGridRankResponseImpl();
void InitDefaultsGetGridRankResponse();
void InitDefaultsGetGridTypeResponseImpl();
void InitDefaultsGetGridTypeResponse();
void InitDefaultsGetGridShapeResponseImpl();
void InitDefaultsGetGridShapeResponse();
void InitDefaultsGetGridSpacingResponseImpl();
void InitDefaultsGetGridSpacingResponse();
void InitDefaultsGetGridOriginResponseImpl();
void InitDefaultsGetGridOriginResponse();
void InitDefaultsGetGridPointsResponseImpl();
void InitDefaultsGetGridPointsResponse();
void InitDefaultsGetCountResponseImpl();
void InitDefaultsGetCountResponse();
void InitDefaultsGetGridConnectivityResponseImpl();
void InitDefaultsGetGridConnectivityResponse();
void InitDefaultsGetGridOffsetResponseImpl();
void InitDefaultsGetGridOffsetResponse();
inline void InitDefaults() {
  InitDefaultsEmpty();
  InitDefaultsInitializeRequest();
  InitDefaultsUpdateUntilRequest();
  InitDefaultsUpdateFracRequest();
  InitDefaultsGetComponentNameResponse();
  InitDefaultsGetVarNameCountResponse();
  InitDefaultsGetVarNamesResponse();
  InitDefaultsGetTimeUnitsResponse();
  InitDefaultsGetTimeStepResponse();
  InitDefaultsGetTimeResponse();
  InitDefaultsGetVarRequest();
  InitDefaultsGetVarGridResponse();
  InitDefaultsGetVarTypeResponse();
  InitDefaultsGetVarItemSizeResponse();
  InitDefaultsGetVarUnitsResponse();
  InitDefaultsGetVarNBytesResponse();
  InitDefaultsIntArrayMessage();
  InitDefaultsFloatArrayMessage();
  InitDefaultsDoubleArrayMessage();
  InitDefaultsGetValueResponse();
  InitDefaultsGetValueAtIndicesRequest();
  InitDefaultsGetValueAtIndicesResponse();
  InitDefaultsSetValueRequest();
  InitDefaultsSetValuePtrRequest();
  InitDefaultsSetValueAtIndicesRequest();
  InitDefaultsGridRequest();
  InitDefaultsGetGridSizeResponse();
  InitDefaultsGetGridRankResponse();
  InitDefaultsGetGridTypeResponse();
  InitDefaultsGetGridShapeResponse();
  InitDefaultsGetGridSpacingResponse();
  InitDefaultsGetGridOriginResponse();
  InitDefaultsGetGridPointsResponse();
  InitDefaultsGetCountResponse();
  InitDefaultsGetGridConnectivityResponse();
  InitDefaultsGetGridOffsetResponse();
}
}  // namespace protobuf_bmi_2eproto
namespace bmi {
class DoubleArrayMessage;
class DoubleArrayMessageDefaultTypeInternal;
extern DoubleArrayMessageDefaultTypeInternal _DoubleArrayMessage_default_instance_;
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class FloatArrayMessage;
class FloatArrayMessageDefaultTypeInternal;
extern FloatArrayMessageDefaultTypeInternal _FloatArrayMessage_default_instance_;
class GetComponentNameResponse;
class GetComponentNameResponseDefaultTypeInternal;
extern GetComponentNameResponseDefaultTypeInternal _GetComponentNameResponse_default_instance_;
class GetCountResponse;
class GetCountResponseDefaultTypeInternal;
extern GetCountResponseDefaultTypeInternal _GetCountResponse_default_instance_;
class GetGridConnectivityResponse;
class GetGridConnectivityResponseDefaultTypeInternal;
extern GetGridConnectivityResponseDefaultTypeInternal _GetGridConnectivityResponse_default_instance_;
class GetGridOffsetResponse;
class GetGridOffsetResponseDefaultTypeInternal;
extern GetGridOffsetResponseDefaultTypeInternal _GetGridOffsetResponse_default_instance_;
class GetGridOriginResponse;
class GetGridOriginResponseDefaultTypeInternal;
extern GetGridOriginResponseDefaultTypeInternal _GetGridOriginResponse_default_instance_;
class GetGridPointsResponse;
class GetGridPointsResponseDefaultTypeInternal;
extern GetGridPointsResponseDefaultTypeInternal _GetGridPointsResponse_default_instance_;
class GetGridRankResponse;
class GetGridRankResponseDefaultTypeInternal;
extern GetGridRankResponseDefaultTypeInternal _GetGridRankResponse_default_instance_;
class GetGridShapeResponse;
class GetGridShapeResponseDefaultTypeInternal;
extern GetGridShapeResponseDefaultTypeInternal _GetGridShapeResponse_default_instance_;
class GetGridSizeResponse;
class GetGridSizeResponseDefaultTypeInternal;
extern GetGridSizeResponseDefaultTypeInternal _GetGridSizeResponse_default_instance_;
class GetGridSpacingResponse;
class GetGridSpacingResponseDefaultTypeInternal;
extern GetGridSpacingResponseDefaultTypeInternal _GetGridSpacingResponse_default_instance_;
class GetGridTypeResponse;
class GetGridTypeResponseDefaultTypeInternal;
extern GetGridTypeResponseDefaultTypeInternal _GetGridTypeResponse_default_instance_;
class GetTimeResponse;
class GetTimeResponseDefaultTypeInternal;
extern GetTimeResponseDefaultTypeInternal _GetTimeResponse_default_instance_;
class GetTimeStepResponse;
class GetTimeStepResponseDefaultTypeInternal;
extern GetTimeStepResponseDefaultTypeInternal _GetTimeStepResponse_default_instance_;
class GetTimeUnitsResponse;
class GetTimeUnitsResponseDefaultTypeInternal;
extern GetTimeUnitsResponseDefaultTypeInternal _GetTimeUnitsResponse_default_instance_;
class GetValueAtIndicesRequest;
class GetValueAtIndicesRequestDefaultTypeInternal;
extern GetValueAtIndicesRequestDefaultTypeInternal _GetValueAtIndicesRequest_default_instance_;
class GetValueAtIndicesResponse;
class GetValueAtIndicesResponseDefaultTypeInternal;
extern GetValueAtIndicesResponseDefaultTypeInternal _GetValueAtIndicesResponse_default_instance_;
class GetValueResponse;
class GetValueResponseDefaultTypeInternal;
extern GetValueResponseDefaultTypeInternal _GetValueResponse_default_instance_;
class GetVarGridResponse;
class GetVarGridResponseDefaultTypeInternal;
extern GetVarGridResponseDefaultTypeInternal _GetVarGridResponse_default_instance_;
class GetVarItemSizeResponse;
class GetVarItemSizeResponseDefaultTypeInternal;
extern GetVarItemSizeResponseDefaultTypeInternal _GetVarItemSizeResponse_default_instance_;
class GetVarNBytesResponse;
class GetVarNBytesResponseDefaultTypeInternal;
extern GetVarNBytesResponseDefaultTypeInternal _GetVarNBytesResponse_default_instance_;
class GetVarNameCountResponse;
class GetVarNameCountResponseDefaultTypeInternal;
extern GetVarNameCountResponseDefaultTypeInternal _GetVarNameCountResponse_default_instance_;
class GetVarNamesResponse;
class GetVarNamesResponseDefaultTypeInternal;
extern GetVarNamesResponseDefaultTypeInternal _GetVarNamesResponse_default_instance_;
class GetVarRequest;
class GetVarRequestDefaultTypeInternal;
extern GetVarRequestDefaultTypeInternal _GetVarRequest_default_instance_;
class GetVarTypeResponse;
class GetVarTypeResponseDefaultTypeInternal;
extern GetVarTypeResponseDefaultTypeInternal _GetVarTypeResponse_default_instance_;
class GetVarUnitsResponse;
class GetVarUnitsResponseDefaultTypeInternal;
extern GetVarUnitsResponseDefaultTypeInternal _GetVarUnitsResponse_default_instance_;
class GridRequest;
class GridRequestDefaultTypeInternal;
extern GridRequestDefaultTypeInternal _GridRequest_default_instance_;
class InitializeRequest;
class InitializeRequestDefaultTypeInternal;
extern InitializeRequestDefaultTypeInternal _InitializeRequest_default_instance_;
class IntArrayMessage;
class IntArrayMessageDefaultTypeInternal;
extern IntArrayMessageDefaultTypeInternal _IntArrayMessage_default_instance_;
class SetValueAtIndicesRequest;
class SetValueAtIndicesRequestDefaultTypeInternal;
extern SetValueAtIndicesRequestDefaultTypeInternal _SetValueAtIndicesRequest_default_instance_;
class SetValuePtrRequest;
class SetValuePtrRequestDefaultTypeInternal;
extern SetValuePtrRequestDefaultTypeInternal _SetValuePtrRequest_default_instance_;
class SetValueRequest;
class SetValueRequestDefaultTypeInternal;
extern SetValueRequestDefaultTypeInternal _SetValueRequest_default_instance_;
class UpdateFracRequest;
class UpdateFracRequestDefaultTypeInternal;
extern UpdateFracRequestDefaultTypeInternal _UpdateFracRequest_default_instance_;
class UpdateUntilRequest;
class UpdateUntilRequestDefaultTypeInternal;
extern UpdateUntilRequestDefaultTypeInternal _UpdateUntilRequest_default_instance_;
}  // namespace bmi
namespace bmi {

// ===================================================================

class Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(Empty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Empty* other);
  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Empty* New() const PROTOBUF_FINAL { return New(NULL); }

  Empty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bmi.Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsEmptyImpl();
};
// -------------------------------------------------------------------

class InitializeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.InitializeRequest) */ {
 public:
  InitializeRequest();
  virtual ~InitializeRequest();

  InitializeRequest(const InitializeRequest& from);

  inline InitializeRequest& operator=(const InitializeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InitializeRequest(InitializeRequest&& from) noexcept
    : InitializeRequest() {
    *this = ::std::move(from);
  }

  inline InitializeRequest& operator=(InitializeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InitializeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InitializeRequest* internal_default_instance() {
    return reinterpret_cast<const InitializeRequest*>(
               &_InitializeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(InitializeRequest* other);
  friend void swap(InitializeRequest& a, InitializeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InitializeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  InitializeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitializeRequest& from);
  void MergeFrom(const InitializeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitializeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string config_file = 1;
  void clear_config_file();
  static const int kConfigFileFieldNumber = 1;
  const ::std::string& config_file() const;
  void set_config_file(const ::std::string& value);
  #if LANG_CXX11
  void set_config_file(::std::string&& value);
  #endif
  void set_config_file(const char* value);
  void set_config_file(const char* value, size_t size);
  ::std::string* mutable_config_file();
  ::std::string* release_config_file();
  void set_allocated_config_file(::std::string* config_file);

  // @@protoc_insertion_point(class_scope:bmi.InitializeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr config_file_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsInitializeRequestImpl();
};
// -------------------------------------------------------------------

class UpdateUntilRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.UpdateUntilRequest) */ {
 public:
  UpdateUntilRequest();
  virtual ~UpdateUntilRequest();

  UpdateUntilRequest(const UpdateUntilRequest& from);

  inline UpdateUntilRequest& operator=(const UpdateUntilRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateUntilRequest(UpdateUntilRequest&& from) noexcept
    : UpdateUntilRequest() {
    *this = ::std::move(from);
  }

  inline UpdateUntilRequest& operator=(UpdateUntilRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUntilRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateUntilRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateUntilRequest*>(
               &_UpdateUntilRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UpdateUntilRequest* other);
  friend void swap(UpdateUntilRequest& a, UpdateUntilRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateUntilRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateUntilRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateUntilRequest& from);
  void MergeFrom(const UpdateUntilRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateUntilRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double until = 1;
  void clear_until();
  static const int kUntilFieldNumber = 1;
  double until() const;
  void set_until(double value);

  // @@protoc_insertion_point(class_scope:bmi.UpdateUntilRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double until_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsUpdateUntilRequestImpl();
};
// -------------------------------------------------------------------

class UpdateFracRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.UpdateFracRequest) */ {
 public:
  UpdateFracRequest();
  virtual ~UpdateFracRequest();

  UpdateFracRequest(const UpdateFracRequest& from);

  inline UpdateFracRequest& operator=(const UpdateFracRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateFracRequest(UpdateFracRequest&& from) noexcept
    : UpdateFracRequest() {
    *this = ::std::move(from);
  }

  inline UpdateFracRequest& operator=(UpdateFracRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFracRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateFracRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateFracRequest*>(
               &_UpdateFracRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(UpdateFracRequest* other);
  friend void swap(UpdateFracRequest& a, UpdateFracRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateFracRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateFracRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateFracRequest& from);
  void MergeFrom(const UpdateFracRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateFracRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double frac = 1;
  void clear_frac();
  static const int kFracFieldNumber = 1;
  double frac() const;
  void set_frac(double value);

  // @@protoc_insertion_point(class_scope:bmi.UpdateFracRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double frac_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsUpdateFracRequestImpl();
};
// -------------------------------------------------------------------

class GetComponentNameResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetComponentNameResponse) */ {
 public:
  GetComponentNameResponse();
  virtual ~GetComponentNameResponse();

  GetComponentNameResponse(const GetComponentNameResponse& from);

  inline GetComponentNameResponse& operator=(const GetComponentNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetComponentNameResponse(GetComponentNameResponse&& from) noexcept
    : GetComponentNameResponse() {
    *this = ::std::move(from);
  }

  inline GetComponentNameResponse& operator=(GetComponentNameResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetComponentNameResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetComponentNameResponse* internal_default_instance() {
    return reinterpret_cast<const GetComponentNameResponse*>(
               &_GetComponentNameResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GetComponentNameResponse* other);
  friend void swap(GetComponentNameResponse& a, GetComponentNameResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetComponentNameResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetComponentNameResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetComponentNameResponse& from);
  void MergeFrom(const GetComponentNameResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetComponentNameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:bmi.GetComponentNameResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetComponentNameResponseImpl();
};
// -------------------------------------------------------------------

class GetVarNameCountResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetVarNameCountResponse) */ {
 public:
  GetVarNameCountResponse();
  virtual ~GetVarNameCountResponse();

  GetVarNameCountResponse(const GetVarNameCountResponse& from);

  inline GetVarNameCountResponse& operator=(const GetVarNameCountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetVarNameCountResponse(GetVarNameCountResponse&& from) noexcept
    : GetVarNameCountResponse() {
    *this = ::std::move(from);
  }

  inline GetVarNameCountResponse& operator=(GetVarNameCountResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVarNameCountResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetVarNameCountResponse* internal_default_instance() {
    return reinterpret_cast<const GetVarNameCountResponse*>(
               &_GetVarNameCountResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GetVarNameCountResponse* other);
  friend void swap(GetVarNameCountResponse& a, GetVarNameCountResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetVarNameCountResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVarNameCountResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVarNameCountResponse& from);
  void MergeFrom(const GetVarNameCountResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVarNameCountResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bmi.GetVarNameCountResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetVarNameCountResponseImpl();
};
// -------------------------------------------------------------------

class GetVarNamesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetVarNamesResponse) */ {
 public:
  GetVarNamesResponse();
  virtual ~GetVarNamesResponse();

  GetVarNamesResponse(const GetVarNamesResponse& from);

  inline GetVarNamesResponse& operator=(const GetVarNamesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetVarNamesResponse(GetVarNamesResponse&& from) noexcept
    : GetVarNamesResponse() {
    *this = ::std::move(from);
  }

  inline GetVarNamesResponse& operator=(GetVarNamesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVarNamesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetVarNamesResponse* internal_default_instance() {
    return reinterpret_cast<const GetVarNamesResponse*>(
               &_GetVarNamesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GetVarNamesResponse* other);
  friend void swap(GetVarNamesResponse& a, GetVarNamesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetVarNamesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVarNamesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVarNamesResponse& from);
  void MergeFrom(const GetVarNamesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVarNamesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string names = 1;
  int names_size() const;
  void clear_names();
  static const int kNamesFieldNumber = 1;
  const ::std::string& names(int index) const;
  ::std::string* mutable_names(int index);
  void set_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_names(int index, ::std::string&& value);
  #endif
  void set_names(int index, const char* value);
  void set_names(int index, const char* value, size_t size);
  ::std::string* add_names();
  void add_names(const ::std::string& value);
  #if LANG_CXX11
  void add_names(::std::string&& value);
  #endif
  void add_names(const char* value);
  void add_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_names();

  // @@protoc_insertion_point(class_scope:bmi.GetVarNamesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> names_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetVarNamesResponseImpl();
};
// -------------------------------------------------------------------

class GetTimeUnitsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetTimeUnitsResponse) */ {
 public:
  GetTimeUnitsResponse();
  virtual ~GetTimeUnitsResponse();

  GetTimeUnitsResponse(const GetTimeUnitsResponse& from);

  inline GetTimeUnitsResponse& operator=(const GetTimeUnitsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTimeUnitsResponse(GetTimeUnitsResponse&& from) noexcept
    : GetTimeUnitsResponse() {
    *this = ::std::move(from);
  }

  inline GetTimeUnitsResponse& operator=(GetTimeUnitsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTimeUnitsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTimeUnitsResponse* internal_default_instance() {
    return reinterpret_cast<const GetTimeUnitsResponse*>(
               &_GetTimeUnitsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GetTimeUnitsResponse* other);
  friend void swap(GetTimeUnitsResponse& a, GetTimeUnitsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTimeUnitsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetTimeUnitsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetTimeUnitsResponse& from);
  void MergeFrom(const GetTimeUnitsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetTimeUnitsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string units = 1;
  void clear_units();
  static const int kUnitsFieldNumber = 1;
  const ::std::string& units() const;
  void set_units(const ::std::string& value);
  #if LANG_CXX11
  void set_units(::std::string&& value);
  #endif
  void set_units(const char* value);
  void set_units(const char* value, size_t size);
  ::std::string* mutable_units();
  ::std::string* release_units();
  void set_allocated_units(::std::string* units);

  // @@protoc_insertion_point(class_scope:bmi.GetTimeUnitsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr units_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetTimeUnitsResponseImpl();
};
// -------------------------------------------------------------------

class GetTimeStepResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetTimeStepResponse) */ {
 public:
  GetTimeStepResponse();
  virtual ~GetTimeStepResponse();

  GetTimeStepResponse(const GetTimeStepResponse& from);

  inline GetTimeStepResponse& operator=(const GetTimeStepResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTimeStepResponse(GetTimeStepResponse&& from) noexcept
    : GetTimeStepResponse() {
    *this = ::std::move(from);
  }

  inline GetTimeStepResponse& operator=(GetTimeStepResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTimeStepResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTimeStepResponse* internal_default_instance() {
    return reinterpret_cast<const GetTimeStepResponse*>(
               &_GetTimeStepResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GetTimeStepResponse* other);
  friend void swap(GetTimeStepResponse& a, GetTimeStepResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTimeStepResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetTimeStepResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetTimeStepResponse& from);
  void MergeFrom(const GetTimeStepResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetTimeStepResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double interval = 1;
  void clear_interval();
  static const int kIntervalFieldNumber = 1;
  double interval() const;
  void set_interval(double value);

  // @@protoc_insertion_point(class_scope:bmi.GetTimeStepResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double interval_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetTimeStepResponseImpl();
};
// -------------------------------------------------------------------

class GetTimeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetTimeResponse) */ {
 public:
  GetTimeResponse();
  virtual ~GetTimeResponse();

  GetTimeResponse(const GetTimeResponse& from);

  inline GetTimeResponse& operator=(const GetTimeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTimeResponse(GetTimeResponse&& from) noexcept
    : GetTimeResponse() {
    *this = ::std::move(from);
  }

  inline GetTimeResponse& operator=(GetTimeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTimeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTimeResponse* internal_default_instance() {
    return reinterpret_cast<const GetTimeResponse*>(
               &_GetTimeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetTimeResponse* other);
  friend void swap(GetTimeResponse& a, GetTimeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTimeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetTimeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetTimeResponse& from);
  void MergeFrom(const GetTimeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetTimeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  double time() const;
  void set_time(double value);

  // @@protoc_insertion_point(class_scope:bmi.GetTimeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double time_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetTimeResponseImpl();
};
// -------------------------------------------------------------------

class GetVarRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetVarRequest) */ {
 public:
  GetVarRequest();
  virtual ~GetVarRequest();

  GetVarRequest(const GetVarRequest& from);

  inline GetVarRequest& operator=(const GetVarRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetVarRequest(GetVarRequest&& from) noexcept
    : GetVarRequest() {
    *this = ::std::move(from);
  }

  inline GetVarRequest& operator=(GetVarRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVarRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetVarRequest* internal_default_instance() {
    return reinterpret_cast<const GetVarRequest*>(
               &_GetVarRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GetVarRequest* other);
  friend void swap(GetVarRequest& a, GetVarRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetVarRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVarRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVarRequest& from);
  void MergeFrom(const GetVarRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVarRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:bmi.GetVarRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetVarRequestImpl();
};
// -------------------------------------------------------------------

class GetVarGridResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetVarGridResponse) */ {
 public:
  GetVarGridResponse();
  virtual ~GetVarGridResponse();

  GetVarGridResponse(const GetVarGridResponse& from);

  inline GetVarGridResponse& operator=(const GetVarGridResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetVarGridResponse(GetVarGridResponse&& from) noexcept
    : GetVarGridResponse() {
    *this = ::std::move(from);
  }

  inline GetVarGridResponse& operator=(GetVarGridResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVarGridResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetVarGridResponse* internal_default_instance() {
    return reinterpret_cast<const GetVarGridResponse*>(
               &_GetVarGridResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(GetVarGridResponse* other);
  friend void swap(GetVarGridResponse& a, GetVarGridResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetVarGridResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVarGridResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVarGridResponse& from);
  void MergeFrom(const GetVarGridResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVarGridResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 grid_id = 1;
  void clear_grid_id();
  static const int kGridIdFieldNumber = 1;
  ::google::protobuf::int32 grid_id() const;
  void set_grid_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bmi.GetVarGridResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 grid_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetVarGridResponseImpl();
};
// -------------------------------------------------------------------

class GetVarTypeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetVarTypeResponse) */ {
 public:
  GetVarTypeResponse();
  virtual ~GetVarTypeResponse();

  GetVarTypeResponse(const GetVarTypeResponse& from);

  inline GetVarTypeResponse& operator=(const GetVarTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetVarTypeResponse(GetVarTypeResponse&& from) noexcept
    : GetVarTypeResponse() {
    *this = ::std::move(from);
  }

  inline GetVarTypeResponse& operator=(GetVarTypeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVarTypeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetVarTypeResponse* internal_default_instance() {
    return reinterpret_cast<const GetVarTypeResponse*>(
               &_GetVarTypeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(GetVarTypeResponse* other);
  friend void swap(GetVarTypeResponse& a, GetVarTypeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetVarTypeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVarTypeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVarTypeResponse& from);
  void MergeFrom(const GetVarTypeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVarTypeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:bmi.GetVarTypeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetVarTypeResponseImpl();
};
// -------------------------------------------------------------------

class GetVarItemSizeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetVarItemSizeResponse) */ {
 public:
  GetVarItemSizeResponse();
  virtual ~GetVarItemSizeResponse();

  GetVarItemSizeResponse(const GetVarItemSizeResponse& from);

  inline GetVarItemSizeResponse& operator=(const GetVarItemSizeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetVarItemSizeResponse(GetVarItemSizeResponse&& from) noexcept
    : GetVarItemSizeResponse() {
    *this = ::std::move(from);
  }

  inline GetVarItemSizeResponse& operator=(GetVarItemSizeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVarItemSizeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetVarItemSizeResponse* internal_default_instance() {
    return reinterpret_cast<const GetVarItemSizeResponse*>(
               &_GetVarItemSizeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GetVarItemSizeResponse* other);
  friend void swap(GetVarItemSizeResponse& a, GetVarItemSizeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetVarItemSizeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVarItemSizeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVarItemSizeResponse& from);
  void MergeFrom(const GetVarItemSizeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVarItemSizeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 size = 1;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bmi.GetVarItemSizeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetVarItemSizeResponseImpl();
};
// -------------------------------------------------------------------

class GetVarUnitsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetVarUnitsResponse) */ {
 public:
  GetVarUnitsResponse();
  virtual ~GetVarUnitsResponse();

  GetVarUnitsResponse(const GetVarUnitsResponse& from);

  inline GetVarUnitsResponse& operator=(const GetVarUnitsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetVarUnitsResponse(GetVarUnitsResponse&& from) noexcept
    : GetVarUnitsResponse() {
    *this = ::std::move(from);
  }

  inline GetVarUnitsResponse& operator=(GetVarUnitsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVarUnitsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetVarUnitsResponse* internal_default_instance() {
    return reinterpret_cast<const GetVarUnitsResponse*>(
               &_GetVarUnitsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GetVarUnitsResponse* other);
  friend void swap(GetVarUnitsResponse& a, GetVarUnitsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetVarUnitsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVarUnitsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVarUnitsResponse& from);
  void MergeFrom(const GetVarUnitsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVarUnitsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string units = 1;
  void clear_units();
  static const int kUnitsFieldNumber = 1;
  const ::std::string& units() const;
  void set_units(const ::std::string& value);
  #if LANG_CXX11
  void set_units(::std::string&& value);
  #endif
  void set_units(const char* value);
  void set_units(const char* value, size_t size);
  ::std::string* mutable_units();
  ::std::string* release_units();
  void set_allocated_units(::std::string* units);

  // @@protoc_insertion_point(class_scope:bmi.GetVarUnitsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr units_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetVarUnitsResponseImpl();
};
// -------------------------------------------------------------------

class GetVarNBytesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetVarNBytesResponse) */ {
 public:
  GetVarNBytesResponse();
  virtual ~GetVarNBytesResponse();

  GetVarNBytesResponse(const GetVarNBytesResponse& from);

  inline GetVarNBytesResponse& operator=(const GetVarNBytesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetVarNBytesResponse(GetVarNBytesResponse&& from) noexcept
    : GetVarNBytesResponse() {
    *this = ::std::move(from);
  }

  inline GetVarNBytesResponse& operator=(GetVarNBytesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVarNBytesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetVarNBytesResponse* internal_default_instance() {
    return reinterpret_cast<const GetVarNBytesResponse*>(
               &_GetVarNBytesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GetVarNBytesResponse* other);
  friend void swap(GetVarNBytesResponse& a, GetVarNBytesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetVarNBytesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVarNBytesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVarNBytesResponse& from);
  void MergeFrom(const GetVarNBytesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVarNBytesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 nbytes = 1;
  void clear_nbytes();
  static const int kNbytesFieldNumber = 1;
  ::google::protobuf::int32 nbytes() const;
  void set_nbytes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bmi.GetVarNBytesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 nbytes_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetVarNBytesResponseImpl();
};
// -------------------------------------------------------------------

class IntArrayMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.IntArrayMessage) */ {
 public:
  IntArrayMessage();
  virtual ~IntArrayMessage();

  IntArrayMessage(const IntArrayMessage& from);

  inline IntArrayMessage& operator=(const IntArrayMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntArrayMessage(IntArrayMessage&& from) noexcept
    : IntArrayMessage() {
    *this = ::std::move(from);
  }

  inline IntArrayMessage& operator=(IntArrayMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntArrayMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntArrayMessage* internal_default_instance() {
    return reinterpret_cast<const IntArrayMessage*>(
               &_IntArrayMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(IntArrayMessage* other);
  friend void swap(IntArrayMessage& a, IntArrayMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntArrayMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  IntArrayMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IntArrayMessage& from);
  void MergeFrom(const IntArrayMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IntArrayMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 values = 1 [packed = true];
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::google::protobuf::int32 values(int index) const;
  void set_values(int index, ::google::protobuf::int32 value);
  void add_values(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:bmi.IntArrayMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > values_;
  mutable int _values_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsIntArrayMessageImpl();
};
// -------------------------------------------------------------------

class FloatArrayMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.FloatArrayMessage) */ {
 public:
  FloatArrayMessage();
  virtual ~FloatArrayMessage();

  FloatArrayMessage(const FloatArrayMessage& from);

  inline FloatArrayMessage& operator=(const FloatArrayMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FloatArrayMessage(FloatArrayMessage&& from) noexcept
    : FloatArrayMessage() {
    *this = ::std::move(from);
  }

  inline FloatArrayMessage& operator=(FloatArrayMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatArrayMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FloatArrayMessage* internal_default_instance() {
    return reinterpret_cast<const FloatArrayMessage*>(
               &_FloatArrayMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(FloatArrayMessage* other);
  friend void swap(FloatArrayMessage& a, FloatArrayMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FloatArrayMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  FloatArrayMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FloatArrayMessage& from);
  void MergeFrom(const FloatArrayMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FloatArrayMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float values = 1 [packed = true];
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  float values(int index) const;
  void set_values(int index, float value);
  void add_values(float value);
  const ::google::protobuf::RepeatedField< float >&
      values() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:bmi.FloatArrayMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > values_;
  mutable int _values_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsFloatArrayMessageImpl();
};
// -------------------------------------------------------------------

class DoubleArrayMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.DoubleArrayMessage) */ {
 public:
  DoubleArrayMessage();
  virtual ~DoubleArrayMessage();

  DoubleArrayMessage(const DoubleArrayMessage& from);

  inline DoubleArrayMessage& operator=(const DoubleArrayMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DoubleArrayMessage(DoubleArrayMessage&& from) noexcept
    : DoubleArrayMessage() {
    *this = ::std::move(from);
  }

  inline DoubleArrayMessage& operator=(DoubleArrayMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleArrayMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DoubleArrayMessage* internal_default_instance() {
    return reinterpret_cast<const DoubleArrayMessage*>(
               &_DoubleArrayMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(DoubleArrayMessage* other);
  friend void swap(DoubleArrayMessage& a, DoubleArrayMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DoubleArrayMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  DoubleArrayMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DoubleArrayMessage& from);
  void MergeFrom(const DoubleArrayMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DoubleArrayMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double values = 1 [packed = true];
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  double values(int index) const;
  void set_values(int index, double value);
  void add_values(double value);
  const ::google::protobuf::RepeatedField< double >&
      values() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:bmi.DoubleArrayMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > values_;
  mutable int _values_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsDoubleArrayMessageImpl();
};
// -------------------------------------------------------------------

class GetValueResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetValueResponse) */ {
 public:
  GetValueResponse();
  virtual ~GetValueResponse();

  GetValueResponse(const GetValueResponse& from);

  inline GetValueResponse& operator=(const GetValueResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetValueResponse(GetValueResponse&& from) noexcept
    : GetValueResponse() {
    *this = ::std::move(from);
  }

  inline GetValueResponse& operator=(GetValueResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetValueResponse& default_instance();

  enum ValuesCase {
    kValuesInt = 1,
    kValuesFloat = 2,
    kValuesDouble = 3,
    VALUES_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetValueResponse* internal_default_instance() {
    return reinterpret_cast<const GetValueResponse*>(
               &_GetValueResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(GetValueResponse* other);
  friend void swap(GetValueResponse& a, GetValueResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetValueResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetValueResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetValueResponse& from);
  void MergeFrom(const GetValueResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetValueResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 shape = 4 [packed = true];
  int shape_size() const;
  void clear_shape();
  static const int kShapeFieldNumber = 4;
  ::google::protobuf::int32 shape(int index) const;
  void set_shape(int index, ::google::protobuf::int32 value);
  void add_shape(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shape() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shape();

  // .bmi.IntArrayMessage values_int = 1;
  bool has_values_int() const;
  void clear_values_int();
  static const int kValuesIntFieldNumber = 1;
  const ::bmi::IntArrayMessage& values_int() const;
  ::bmi::IntArrayMessage* release_values_int();
  ::bmi::IntArrayMessage* mutable_values_int();
  void set_allocated_values_int(::bmi::IntArrayMessage* values_int);

  // .bmi.FloatArrayMessage values_float = 2;
  bool has_values_float() const;
  void clear_values_float();
  static const int kValuesFloatFieldNumber = 2;
  const ::bmi::FloatArrayMessage& values_float() const;
  ::bmi::FloatArrayMessage* release_values_float();
  ::bmi::FloatArrayMessage* mutable_values_float();
  void set_allocated_values_float(::bmi::FloatArrayMessage* values_float);

  // .bmi.DoubleArrayMessage values_double = 3;
  bool has_values_double() const;
  void clear_values_double();
  static const int kValuesDoubleFieldNumber = 3;
  const ::bmi::DoubleArrayMessage& values_double() const;
  ::bmi::DoubleArrayMessage* release_values_double();
  ::bmi::DoubleArrayMessage* mutable_values_double();
  void set_allocated_values_double(::bmi::DoubleArrayMessage* values_double);

  ValuesCase values_case() const;
  // @@protoc_insertion_point(class_scope:bmi.GetValueResponse)
 private:
  void set_has_values_int();
  void set_has_values_float();
  void set_has_values_double();

  inline bool has_values() const;
  void clear_values();
  inline void clear_has_values();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shape_;
  mutable int _shape_cached_byte_size_;
  union ValuesUnion {
    ValuesUnion() {}
    ::bmi::IntArrayMessage* values_int_;
    ::bmi::FloatArrayMessage* values_float_;
    ::bmi::DoubleArrayMessage* values_double_;
  } values_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetValueResponseImpl();
};
// -------------------------------------------------------------------

class GetValueAtIndicesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetValueAtIndicesRequest) */ {
 public:
  GetValueAtIndicesRequest();
  virtual ~GetValueAtIndicesRequest();

  GetValueAtIndicesRequest(const GetValueAtIndicesRequest& from);

  inline GetValueAtIndicesRequest& operator=(const GetValueAtIndicesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetValueAtIndicesRequest(GetValueAtIndicesRequest&& from) noexcept
    : GetValueAtIndicesRequest() {
    *this = ::std::move(from);
  }

  inline GetValueAtIndicesRequest& operator=(GetValueAtIndicesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetValueAtIndicesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetValueAtIndicesRequest* internal_default_instance() {
    return reinterpret_cast<const GetValueAtIndicesRequest*>(
               &_GetValueAtIndicesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(GetValueAtIndicesRequest* other);
  friend void swap(GetValueAtIndicesRequest& a, GetValueAtIndicesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetValueAtIndicesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetValueAtIndicesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetValueAtIndicesRequest& from);
  void MergeFrom(const GetValueAtIndicesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetValueAtIndicesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 indices = 2 [packed = true];
  int indices_size() const;
  void clear_indices();
  static const int kIndicesFieldNumber = 2;
  ::google::protobuf::int32 indices(int index) const;
  void set_indices(int index, ::google::protobuf::int32 value);
  void add_indices(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      indices() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_indices();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 index_size = 3;
  void clear_index_size();
  static const int kIndexSizeFieldNumber = 3;
  ::google::protobuf::int32 index_size() const;
  void set_index_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bmi.GetValueAtIndicesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > indices_;
  mutable int _indices_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 index_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetValueAtIndicesRequestImpl();
};
// -------------------------------------------------------------------

class GetValueAtIndicesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetValueAtIndicesResponse) */ {
 public:
  GetValueAtIndicesResponse();
  virtual ~GetValueAtIndicesResponse();

  GetValueAtIndicesResponse(const GetValueAtIndicesResponse& from);

  inline GetValueAtIndicesResponse& operator=(const GetValueAtIndicesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetValueAtIndicesResponse(GetValueAtIndicesResponse&& from) noexcept
    : GetValueAtIndicesResponse() {
    *this = ::std::move(from);
  }

  inline GetValueAtIndicesResponse& operator=(GetValueAtIndicesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetValueAtIndicesResponse& default_instance();

  enum ValuesCase {
    kValuesInt = 1,
    kValuesFloat = 2,
    kValuesDouble = 3,
    VALUES_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetValueAtIndicesResponse* internal_default_instance() {
    return reinterpret_cast<const GetValueAtIndicesResponse*>(
               &_GetValueAtIndicesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(GetValueAtIndicesResponse* other);
  friend void swap(GetValueAtIndicesResponse& a, GetValueAtIndicesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetValueAtIndicesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetValueAtIndicesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetValueAtIndicesResponse& from);
  void MergeFrom(const GetValueAtIndicesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetValueAtIndicesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 shape = 4 [packed = true];
  int shape_size() const;
  void clear_shape();
  static const int kShapeFieldNumber = 4;
  ::google::protobuf::int32 shape(int index) const;
  void set_shape(int index, ::google::protobuf::int32 value);
  void add_shape(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shape() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shape();

  // .bmi.IntArrayMessage values_int = 1;
  bool has_values_int() const;
  void clear_values_int();
  static const int kValuesIntFieldNumber = 1;
  const ::bmi::IntArrayMessage& values_int() const;
  ::bmi::IntArrayMessage* release_values_int();
  ::bmi::IntArrayMessage* mutable_values_int();
  void set_allocated_values_int(::bmi::IntArrayMessage* values_int);

  // .bmi.FloatArrayMessage values_float = 2;
  bool has_values_float() const;
  void clear_values_float();
  static const int kValuesFloatFieldNumber = 2;
  const ::bmi::FloatArrayMessage& values_float() const;
  ::bmi::FloatArrayMessage* release_values_float();
  ::bmi::FloatArrayMessage* mutable_values_float();
  void set_allocated_values_float(::bmi::FloatArrayMessage* values_float);

  // .bmi.DoubleArrayMessage values_double = 3;
  bool has_values_double() const;
  void clear_values_double();
  static const int kValuesDoubleFieldNumber = 3;
  const ::bmi::DoubleArrayMessage& values_double() const;
  ::bmi::DoubleArrayMessage* release_values_double();
  ::bmi::DoubleArrayMessage* mutable_values_double();
  void set_allocated_values_double(::bmi::DoubleArrayMessage* values_double);

  ValuesCase values_case() const;
  // @@protoc_insertion_point(class_scope:bmi.GetValueAtIndicesResponse)
 private:
  void set_has_values_int();
  void set_has_values_float();
  void set_has_values_double();

  inline bool has_values() const;
  void clear_values();
  inline void clear_has_values();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shape_;
  mutable int _shape_cached_byte_size_;
  union ValuesUnion {
    ValuesUnion() {}
    ::bmi::IntArrayMessage* values_int_;
    ::bmi::FloatArrayMessage* values_float_;
    ::bmi::DoubleArrayMessage* values_double_;
  } values_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetValueAtIndicesResponseImpl();
};
// -------------------------------------------------------------------

class SetValueRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.SetValueRequest) */ {
 public:
  SetValueRequest();
  virtual ~SetValueRequest();

  SetValueRequest(const SetValueRequest& from);

  inline SetValueRequest& operator=(const SetValueRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetValueRequest(SetValueRequest&& from) noexcept
    : SetValueRequest() {
    *this = ::std::move(from);
  }

  inline SetValueRequest& operator=(SetValueRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetValueRequest& default_instance();

  enum ValuesCase {
    kValuesInt = 2,
    kValuesFloat = 3,
    kValuesDouble = 4,
    VALUES_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetValueRequest* internal_default_instance() {
    return reinterpret_cast<const SetValueRequest*>(
               &_SetValueRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(SetValueRequest* other);
  friend void swap(SetValueRequest& a, SetValueRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetValueRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetValueRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetValueRequest& from);
  void MergeFrom(const SetValueRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetValueRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 shape = 5 [packed = true];
  int shape_size() const;
  void clear_shape();
  static const int kShapeFieldNumber = 5;
  ::google::protobuf::int32 shape(int index) const;
  void set_shape(int index, ::google::protobuf::int32 value);
  void add_shape(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shape() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shape();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .bmi.IntArrayMessage values_int = 2;
  bool has_values_int() const;
  void clear_values_int();
  static const int kValuesIntFieldNumber = 2;
  const ::bmi::IntArrayMessage& values_int() const;
  ::bmi::IntArrayMessage* release_values_int();
  ::bmi::IntArrayMessage* mutable_values_int();
  void set_allocated_values_int(::bmi::IntArrayMessage* values_int);

  // .bmi.FloatArrayMessage values_float = 3;
  bool has_values_float() const;
  void clear_values_float();
  static const int kValuesFloatFieldNumber = 3;
  const ::bmi::FloatArrayMessage& values_float() const;
  ::bmi::FloatArrayMessage* release_values_float();
  ::bmi::FloatArrayMessage* mutable_values_float();
  void set_allocated_values_float(::bmi::FloatArrayMessage* values_float);

  // .bmi.DoubleArrayMessage values_double = 4;
  bool has_values_double() const;
  void clear_values_double();
  static const int kValuesDoubleFieldNumber = 4;
  const ::bmi::DoubleArrayMessage& values_double() const;
  ::bmi::DoubleArrayMessage* release_values_double();
  ::bmi::DoubleArrayMessage* mutable_values_double();
  void set_allocated_values_double(::bmi::DoubleArrayMessage* values_double);

  ValuesCase values_case() const;
  // @@protoc_insertion_point(class_scope:bmi.SetValueRequest)
 private:
  void set_has_values_int();
  void set_has_values_float();
  void set_has_values_double();

  inline bool has_values() const;
  void clear_values();
  inline void clear_has_values();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shape_;
  mutable int _shape_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  union ValuesUnion {
    ValuesUnion() {}
    ::bmi::IntArrayMessage* values_int_;
    ::bmi::FloatArrayMessage* values_float_;
    ::bmi::DoubleArrayMessage* values_double_;
  } values_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsSetValueRequestImpl();
};
// -------------------------------------------------------------------

class SetValuePtrRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.SetValuePtrRequest) */ {
 public:
  SetValuePtrRequest();
  virtual ~SetValuePtrRequest();

  SetValuePtrRequest(const SetValuePtrRequest& from);

  inline SetValuePtrRequest& operator=(const SetValuePtrRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetValuePtrRequest(SetValuePtrRequest&& from) noexcept
    : SetValuePtrRequest() {
    *this = ::std::move(from);
  }

  inline SetValuePtrRequest& operator=(SetValuePtrRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetValuePtrRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetValuePtrRequest* internal_default_instance() {
    return reinterpret_cast<const SetValuePtrRequest*>(
               &_SetValuePtrRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(SetValuePtrRequest* other);
  friend void swap(SetValuePtrRequest& a, SetValuePtrRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetValuePtrRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetValuePtrRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetValuePtrRequest& from);
  void MergeFrom(const SetValuePtrRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetValuePtrRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 ref = 2;
  void clear_ref();
  static const int kRefFieldNumber = 2;
  ::google::protobuf::int32 ref() const;
  void set_ref(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bmi.SetValuePtrRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 ref_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsSetValuePtrRequestImpl();
};
// -------------------------------------------------------------------

class SetValueAtIndicesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.SetValueAtIndicesRequest) */ {
 public:
  SetValueAtIndicesRequest();
  virtual ~SetValueAtIndicesRequest();

  SetValueAtIndicesRequest(const SetValueAtIndicesRequest& from);

  inline SetValueAtIndicesRequest& operator=(const SetValueAtIndicesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetValueAtIndicesRequest(SetValueAtIndicesRequest&& from) noexcept
    : SetValueAtIndicesRequest() {
    *this = ::std::move(from);
  }

  inline SetValueAtIndicesRequest& operator=(SetValueAtIndicesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetValueAtIndicesRequest& default_instance();

  enum ValuesCase {
    kValuesInt = 3,
    kValuesFloat = 4,
    kValuesDouble = 5,
    VALUES_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetValueAtIndicesRequest* internal_default_instance() {
    return reinterpret_cast<const SetValueAtIndicesRequest*>(
               &_SetValueAtIndicesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(SetValueAtIndicesRequest* other);
  friend void swap(SetValueAtIndicesRequest& a, SetValueAtIndicesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetValueAtIndicesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetValueAtIndicesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetValueAtIndicesRequest& from);
  void MergeFrom(const SetValueAtIndicesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetValueAtIndicesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 indices = 2 [packed = true];
  int indices_size() const;
  void clear_indices();
  static const int kIndicesFieldNumber = 2;
  ::google::protobuf::int32 indices(int index) const;
  void set_indices(int index, ::google::protobuf::int32 value);
  void add_indices(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      indices() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_indices();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 index_size = 6;
  void clear_index_size();
  static const int kIndexSizeFieldNumber = 6;
  ::google::protobuf::int32 index_size() const;
  void set_index_size(::google::protobuf::int32 value);

  // .bmi.IntArrayMessage values_int = 3;
  bool has_values_int() const;
  void clear_values_int();
  static const int kValuesIntFieldNumber = 3;
  const ::bmi::IntArrayMessage& values_int() const;
  ::bmi::IntArrayMessage* release_values_int();
  ::bmi::IntArrayMessage* mutable_values_int();
  void set_allocated_values_int(::bmi::IntArrayMessage* values_int);

  // .bmi.FloatArrayMessage values_float = 4;
  bool has_values_float() const;
  void clear_values_float();
  static const int kValuesFloatFieldNumber = 4;
  const ::bmi::FloatArrayMessage& values_float() const;
  ::bmi::FloatArrayMessage* release_values_float();
  ::bmi::FloatArrayMessage* mutable_values_float();
  void set_allocated_values_float(::bmi::FloatArrayMessage* values_float);

  // .bmi.DoubleArrayMessage values_double = 5;
  bool has_values_double() const;
  void clear_values_double();
  static const int kValuesDoubleFieldNumber = 5;
  const ::bmi::DoubleArrayMessage& values_double() const;
  ::bmi::DoubleArrayMessage* release_values_double();
  ::bmi::DoubleArrayMessage* mutable_values_double();
  void set_allocated_values_double(::bmi::DoubleArrayMessage* values_double);

  ValuesCase values_case() const;
  // @@protoc_insertion_point(class_scope:bmi.SetValueAtIndicesRequest)
 private:
  void set_has_values_int();
  void set_has_values_float();
  void set_has_values_double();

  inline bool has_values() const;
  void clear_values();
  inline void clear_has_values();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > indices_;
  mutable int _indices_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 index_size_;
  union ValuesUnion {
    ValuesUnion() {}
    ::bmi::IntArrayMessage* values_int_;
    ::bmi::FloatArrayMessage* values_float_;
    ::bmi::DoubleArrayMessage* values_double_;
  } values_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsSetValueAtIndicesRequestImpl();
};
// -------------------------------------------------------------------

class GridRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GridRequest) */ {
 public:
  GridRequest();
  virtual ~GridRequest();

  GridRequest(const GridRequest& from);

  inline GridRequest& operator=(const GridRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GridRequest(GridRequest&& from) noexcept
    : GridRequest() {
    *this = ::std::move(from);
  }

  inline GridRequest& operator=(GridRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GridRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GridRequest* internal_default_instance() {
    return reinterpret_cast<const GridRequest*>(
               &_GridRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(GridRequest* other);
  friend void swap(GridRequest& a, GridRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GridRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GridRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GridRequest& from);
  void MergeFrom(const GridRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GridRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 grid_id = 1;
  void clear_grid_id();
  static const int kGridIdFieldNumber = 1;
  ::google::protobuf::int32 grid_id() const;
  void set_grid_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bmi.GridRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 grid_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGridRequestImpl();
};
// -------------------------------------------------------------------

class GetGridSizeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetGridSizeResponse) */ {
 public:
  GetGridSizeResponse();
  virtual ~GetGridSizeResponse();

  GetGridSizeResponse(const GetGridSizeResponse& from);

  inline GetGridSizeResponse& operator=(const GetGridSizeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGridSizeResponse(GetGridSizeResponse&& from) noexcept
    : GetGridSizeResponse() {
    *this = ::std::move(from);
  }

  inline GetGridSizeResponse& operator=(GetGridSizeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGridSizeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGridSizeResponse* internal_default_instance() {
    return reinterpret_cast<const GetGridSizeResponse*>(
               &_GetGridSizeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(GetGridSizeResponse* other);
  friend void swap(GetGridSizeResponse& a, GetGridSizeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGridSizeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGridSizeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGridSizeResponse& from);
  void MergeFrom(const GetGridSizeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGridSizeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 size = 1;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bmi.GetGridSizeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetGridSizeResponseImpl();
};
// -------------------------------------------------------------------

class GetGridRankResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetGridRankResponse) */ {
 public:
  GetGridRankResponse();
  virtual ~GetGridRankResponse();

  GetGridRankResponse(const GetGridRankResponse& from);

  inline GetGridRankResponse& operator=(const GetGridRankResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGridRankResponse(GetGridRankResponse&& from) noexcept
    : GetGridRankResponse() {
    *this = ::std::move(from);
  }

  inline GetGridRankResponse& operator=(GetGridRankResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGridRankResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGridRankResponse* internal_default_instance() {
    return reinterpret_cast<const GetGridRankResponse*>(
               &_GetGridRankResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(GetGridRankResponse* other);
  friend void swap(GetGridRankResponse& a, GetGridRankResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGridRankResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGridRankResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGridRankResponse& from);
  void MergeFrom(const GetGridRankResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGridRankResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 rank = 1;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bmi.GetGridRankResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 rank_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetGridRankResponseImpl();
};
// -------------------------------------------------------------------

class GetGridTypeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetGridTypeResponse) */ {
 public:
  GetGridTypeResponse();
  virtual ~GetGridTypeResponse();

  GetGridTypeResponse(const GetGridTypeResponse& from);

  inline GetGridTypeResponse& operator=(const GetGridTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGridTypeResponse(GetGridTypeResponse&& from) noexcept
    : GetGridTypeResponse() {
    *this = ::std::move(from);
  }

  inline GetGridTypeResponse& operator=(GetGridTypeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGridTypeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGridTypeResponse* internal_default_instance() {
    return reinterpret_cast<const GetGridTypeResponse*>(
               &_GetGridTypeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(GetGridTypeResponse* other);
  friend void swap(GetGridTypeResponse& a, GetGridTypeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGridTypeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGridTypeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGridTypeResponse& from);
  void MergeFrom(const GetGridTypeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGridTypeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:bmi.GetGridTypeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetGridTypeResponseImpl();
};
// -------------------------------------------------------------------

class GetGridShapeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetGridShapeResponse) */ {
 public:
  GetGridShapeResponse();
  virtual ~GetGridShapeResponse();

  GetGridShapeResponse(const GetGridShapeResponse& from);

  inline GetGridShapeResponse& operator=(const GetGridShapeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGridShapeResponse(GetGridShapeResponse&& from) noexcept
    : GetGridShapeResponse() {
    *this = ::std::move(from);
  }

  inline GetGridShapeResponse& operator=(GetGridShapeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGridShapeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGridShapeResponse* internal_default_instance() {
    return reinterpret_cast<const GetGridShapeResponse*>(
               &_GetGridShapeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(GetGridShapeResponse* other);
  friend void swap(GetGridShapeResponse& a, GetGridShapeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGridShapeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGridShapeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGridShapeResponse& from);
  void MergeFrom(const GetGridShapeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGridShapeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 shape = 1 [packed = true];
  int shape_size() const;
  void clear_shape();
  static const int kShapeFieldNumber = 1;
  ::google::protobuf::int32 shape(int index) const;
  void set_shape(int index, ::google::protobuf::int32 value);
  void add_shape(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shape() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shape();

  // @@protoc_insertion_point(class_scope:bmi.GetGridShapeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shape_;
  mutable int _shape_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetGridShapeResponseImpl();
};
// -------------------------------------------------------------------

class GetGridSpacingResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetGridSpacingResponse) */ {
 public:
  GetGridSpacingResponse();
  virtual ~GetGridSpacingResponse();

  GetGridSpacingResponse(const GetGridSpacingResponse& from);

  inline GetGridSpacingResponse& operator=(const GetGridSpacingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGridSpacingResponse(GetGridSpacingResponse&& from) noexcept
    : GetGridSpacingResponse() {
    *this = ::std::move(from);
  }

  inline GetGridSpacingResponse& operator=(GetGridSpacingResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGridSpacingResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGridSpacingResponse* internal_default_instance() {
    return reinterpret_cast<const GetGridSpacingResponse*>(
               &_GetGridSpacingResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(GetGridSpacingResponse* other);
  friend void swap(GetGridSpacingResponse& a, GetGridSpacingResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGridSpacingResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGridSpacingResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGridSpacingResponse& from);
  void MergeFrom(const GetGridSpacingResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGridSpacingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double spacing = 1 [packed = true];
  int spacing_size() const;
  void clear_spacing();
  static const int kSpacingFieldNumber = 1;
  double spacing(int index) const;
  void set_spacing(int index, double value);
  void add_spacing(double value);
  const ::google::protobuf::RepeatedField< double >&
      spacing() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_spacing();

  // @@protoc_insertion_point(class_scope:bmi.GetGridSpacingResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > spacing_;
  mutable int _spacing_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetGridSpacingResponseImpl();
};
// -------------------------------------------------------------------

class GetGridOriginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetGridOriginResponse) */ {
 public:
  GetGridOriginResponse();
  virtual ~GetGridOriginResponse();

  GetGridOriginResponse(const GetGridOriginResponse& from);

  inline GetGridOriginResponse& operator=(const GetGridOriginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGridOriginResponse(GetGridOriginResponse&& from) noexcept
    : GetGridOriginResponse() {
    *this = ::std::move(from);
  }

  inline GetGridOriginResponse& operator=(GetGridOriginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGridOriginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGridOriginResponse* internal_default_instance() {
    return reinterpret_cast<const GetGridOriginResponse*>(
               &_GetGridOriginResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(GetGridOriginResponse* other);
  friend void swap(GetGridOriginResponse& a, GetGridOriginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGridOriginResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGridOriginResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGridOriginResponse& from);
  void MergeFrom(const GetGridOriginResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGridOriginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double origin = 1 [packed = true];
  int origin_size() const;
  void clear_origin();
  static const int kOriginFieldNumber = 1;
  double origin(int index) const;
  void set_origin(int index, double value);
  void add_origin(double value);
  const ::google::protobuf::RepeatedField< double >&
      origin() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_origin();

  // @@protoc_insertion_point(class_scope:bmi.GetGridOriginResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > origin_;
  mutable int _origin_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetGridOriginResponseImpl();
};
// -------------------------------------------------------------------

class GetGridPointsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetGridPointsResponse) */ {
 public:
  GetGridPointsResponse();
  virtual ~GetGridPointsResponse();

  GetGridPointsResponse(const GetGridPointsResponse& from);

  inline GetGridPointsResponse& operator=(const GetGridPointsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGridPointsResponse(GetGridPointsResponse&& from) noexcept
    : GetGridPointsResponse() {
    *this = ::std::move(from);
  }

  inline GetGridPointsResponse& operator=(GetGridPointsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGridPointsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGridPointsResponse* internal_default_instance() {
    return reinterpret_cast<const GetGridPointsResponse*>(
               &_GetGridPointsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(GetGridPointsResponse* other);
  friend void swap(GetGridPointsResponse& a, GetGridPointsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGridPointsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGridPointsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGridPointsResponse& from);
  void MergeFrom(const GetGridPointsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGridPointsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double coordinates = 1 [packed = true];
  int coordinates_size() const;
  void clear_coordinates();
  static const int kCoordinatesFieldNumber = 1;
  double coordinates(int index) const;
  void set_coordinates(int index, double value);
  void add_coordinates(double value);
  const ::google::protobuf::RepeatedField< double >&
      coordinates() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_coordinates();

  // @@protoc_insertion_point(class_scope:bmi.GetGridPointsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > coordinates_;
  mutable int _coordinates_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetGridPointsResponseImpl();
};
// -------------------------------------------------------------------

class GetCountResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetCountResponse) */ {
 public:
  GetCountResponse();
  virtual ~GetCountResponse();

  GetCountResponse(const GetCountResponse& from);

  inline GetCountResponse& operator=(const GetCountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCountResponse(GetCountResponse&& from) noexcept
    : GetCountResponse() {
    *this = ::std::move(from);
  }

  inline GetCountResponse& operator=(GetCountResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCountResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCountResponse* internal_default_instance() {
    return reinterpret_cast<const GetCountResponse*>(
               &_GetCountResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(GetCountResponse* other);
  friend void swap(GetCountResponse& a, GetCountResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCountResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCountResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCountResponse& from);
  void MergeFrom(const GetCountResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCountResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bmi.GetCountResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetCountResponseImpl();
};
// -------------------------------------------------------------------

class GetGridConnectivityResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetGridConnectivityResponse) */ {
 public:
  GetGridConnectivityResponse();
  virtual ~GetGridConnectivityResponse();

  GetGridConnectivityResponse(const GetGridConnectivityResponse& from);

  inline GetGridConnectivityResponse& operator=(const GetGridConnectivityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGridConnectivityResponse(GetGridConnectivityResponse&& from) noexcept
    : GetGridConnectivityResponse() {
    *this = ::std::move(from);
  }

  inline GetGridConnectivityResponse& operator=(GetGridConnectivityResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGridConnectivityResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGridConnectivityResponse* internal_default_instance() {
    return reinterpret_cast<const GetGridConnectivityResponse*>(
               &_GetGridConnectivityResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(GetGridConnectivityResponse* other);
  friend void swap(GetGridConnectivityResponse& a, GetGridConnectivityResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGridConnectivityResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGridConnectivityResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGridConnectivityResponse& from);
  void MergeFrom(const GetGridConnectivityResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGridConnectivityResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 links = 1 [packed = true];
  int links_size() const;
  void clear_links();
  static const int kLinksFieldNumber = 1;
  ::google::protobuf::int32 links(int index) const;
  void set_links(int index, ::google::protobuf::int32 value);
  void add_links(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      links() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_links();

  // @@protoc_insertion_point(class_scope:bmi.GetGridConnectivityResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > links_;
  mutable int _links_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetGridConnectivityResponseImpl();
};
// -------------------------------------------------------------------

class GetGridOffsetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bmi.GetGridOffsetResponse) */ {
 public:
  GetGridOffsetResponse();
  virtual ~GetGridOffsetResponse();

  GetGridOffsetResponse(const GetGridOffsetResponse& from);

  inline GetGridOffsetResponse& operator=(const GetGridOffsetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGridOffsetResponse(GetGridOffsetResponse&& from) noexcept
    : GetGridOffsetResponse() {
    *this = ::std::move(from);
  }

  inline GetGridOffsetResponse& operator=(GetGridOffsetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGridOffsetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGridOffsetResponse* internal_default_instance() {
    return reinterpret_cast<const GetGridOffsetResponse*>(
               &_GetGridOffsetResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(GetGridOffsetResponse* other);
  friend void swap(GetGridOffsetResponse& a, GetGridOffsetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGridOffsetResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGridOffsetResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGridOffsetResponse& from);
  void MergeFrom(const GetGridOffsetResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGridOffsetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 offsets = 1 [packed = true];
  int offsets_size() const;
  void clear_offsets();
  static const int kOffsetsFieldNumber = 1;
  ::google::protobuf::int32 offsets(int index) const;
  void set_offsets(int index, ::google::protobuf::int32 value);
  void add_offsets(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      offsets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_offsets();

  // @@protoc_insertion_point(class_scope:bmi.GetGridOffsetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > offsets_;
  mutable int _offsets_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_bmi_2eproto::TableStruct;
  friend void ::protobuf_bmi_2eproto::InitDefaultsGetGridOffsetResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Empty

// -------------------------------------------------------------------

// InitializeRequest

// string config_file = 1;
inline void InitializeRequest::clear_config_file() {
  config_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InitializeRequest::config_file() const {
  // @@protoc_insertion_point(field_get:bmi.InitializeRequest.config_file)
  return config_file_.GetNoArena();
}
inline void InitializeRequest::set_config_file(const ::std::string& value) {
  
  config_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bmi.InitializeRequest.config_file)
}
#if LANG_CXX11
inline void InitializeRequest::set_config_file(::std::string&& value) {
  
  config_file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bmi.InitializeRequest.config_file)
}
#endif
inline void InitializeRequest::set_config_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  config_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bmi.InitializeRequest.config_file)
}
inline void InitializeRequest::set_config_file(const char* value, size_t size) {
  
  config_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bmi.InitializeRequest.config_file)
}
inline ::std::string* InitializeRequest::mutable_config_file() {
  
  // @@protoc_insertion_point(field_mutable:bmi.InitializeRequest.config_file)
  return config_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitializeRequest::release_config_file() {
  // @@protoc_insertion_point(field_release:bmi.InitializeRequest.config_file)
  
  return config_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitializeRequest::set_allocated_config_file(::std::string* config_file) {
  if (config_file != NULL) {
    
  } else {
    
  }
  config_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config_file);
  // @@protoc_insertion_point(field_set_allocated:bmi.InitializeRequest.config_file)
}

// -------------------------------------------------------------------

// UpdateUntilRequest

// double until = 1;
inline void UpdateUntilRequest::clear_until() {
  until_ = 0;
}
inline double UpdateUntilRequest::until() const {
  // @@protoc_insertion_point(field_get:bmi.UpdateUntilRequest.until)
  return until_;
}
inline void UpdateUntilRequest::set_until(double value) {
  
  until_ = value;
  // @@protoc_insertion_point(field_set:bmi.UpdateUntilRequest.until)
}

// -------------------------------------------------------------------

// UpdateFracRequest

// double frac = 1;
inline void UpdateFracRequest::clear_frac() {
  frac_ = 0;
}
inline double UpdateFracRequest::frac() const {
  // @@protoc_insertion_point(field_get:bmi.UpdateFracRequest.frac)
  return frac_;
}
inline void UpdateFracRequest::set_frac(double value) {
  
  frac_ = value;
  // @@protoc_insertion_point(field_set:bmi.UpdateFracRequest.frac)
}

// -------------------------------------------------------------------

// GetComponentNameResponse

// string name = 1;
inline void GetComponentNameResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetComponentNameResponse::name() const {
  // @@protoc_insertion_point(field_get:bmi.GetComponentNameResponse.name)
  return name_.GetNoArena();
}
inline void GetComponentNameResponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bmi.GetComponentNameResponse.name)
}
#if LANG_CXX11
inline void GetComponentNameResponse::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bmi.GetComponentNameResponse.name)
}
#endif
inline void GetComponentNameResponse::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bmi.GetComponentNameResponse.name)
}
inline void GetComponentNameResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bmi.GetComponentNameResponse.name)
}
inline ::std::string* GetComponentNameResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bmi.GetComponentNameResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetComponentNameResponse::release_name() {
  // @@protoc_insertion_point(field_release:bmi.GetComponentNameResponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetComponentNameResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bmi.GetComponentNameResponse.name)
}

// -------------------------------------------------------------------

// GetVarNameCountResponse

// int32 count = 1;
inline void GetVarNameCountResponse::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 GetVarNameCountResponse::count() const {
  // @@protoc_insertion_point(field_get:bmi.GetVarNameCountResponse.count)
  return count_;
}
inline void GetVarNameCountResponse::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:bmi.GetVarNameCountResponse.count)
}

// -------------------------------------------------------------------

// GetVarNamesResponse

// repeated string names = 1;
inline int GetVarNamesResponse::names_size() const {
  return names_.size();
}
inline void GetVarNamesResponse::clear_names() {
  names_.Clear();
}
inline const ::std::string& GetVarNamesResponse::names(int index) const {
  // @@protoc_insertion_point(field_get:bmi.GetVarNamesResponse.names)
  return names_.Get(index);
}
inline ::std::string* GetVarNamesResponse::mutable_names(int index) {
  // @@protoc_insertion_point(field_mutable:bmi.GetVarNamesResponse.names)
  return names_.Mutable(index);
}
inline void GetVarNamesResponse::set_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bmi.GetVarNamesResponse.names)
  names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetVarNamesResponse::set_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:bmi.GetVarNamesResponse.names)
  names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetVarNamesResponse::set_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bmi.GetVarNamesResponse.names)
}
inline void GetVarNamesResponse::set_names(int index, const char* value, size_t size) {
  names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bmi.GetVarNamesResponse.names)
}
inline ::std::string* GetVarNamesResponse::add_names() {
  // @@protoc_insertion_point(field_add_mutable:bmi.GetVarNamesResponse.names)
  return names_.Add();
}
inline void GetVarNamesResponse::add_names(const ::std::string& value) {
  names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bmi.GetVarNamesResponse.names)
}
#if LANG_CXX11
inline void GetVarNamesResponse::add_names(::std::string&& value) {
  names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:bmi.GetVarNamesResponse.names)
}
#endif
inline void GetVarNamesResponse::add_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bmi.GetVarNamesResponse.names)
}
inline void GetVarNamesResponse::add_names(const char* value, size_t size) {
  names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bmi.GetVarNamesResponse.names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetVarNamesResponse::names() const {
  // @@protoc_insertion_point(field_list:bmi.GetVarNamesResponse.names)
  return names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetVarNamesResponse::mutable_names() {
  // @@protoc_insertion_point(field_mutable_list:bmi.GetVarNamesResponse.names)
  return &names_;
}

// -------------------------------------------------------------------

// GetTimeUnitsResponse

// string units = 1;
inline void GetTimeUnitsResponse::clear_units() {
  units_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetTimeUnitsResponse::units() const {
  // @@protoc_insertion_point(field_get:bmi.GetTimeUnitsResponse.units)
  return units_.GetNoArena();
}
inline void GetTimeUnitsResponse::set_units(const ::std::string& value) {
  
  units_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bmi.GetTimeUnitsResponse.units)
}
#if LANG_CXX11
inline void GetTimeUnitsResponse::set_units(::std::string&& value) {
  
  units_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bmi.GetTimeUnitsResponse.units)
}
#endif
inline void GetTimeUnitsResponse::set_units(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  units_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bmi.GetTimeUnitsResponse.units)
}
inline void GetTimeUnitsResponse::set_units(const char* value, size_t size) {
  
  units_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bmi.GetTimeUnitsResponse.units)
}
inline ::std::string* GetTimeUnitsResponse::mutable_units() {
  
  // @@protoc_insertion_point(field_mutable:bmi.GetTimeUnitsResponse.units)
  return units_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTimeUnitsResponse::release_units() {
  // @@protoc_insertion_point(field_release:bmi.GetTimeUnitsResponse.units)
  
  return units_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTimeUnitsResponse::set_allocated_units(::std::string* units) {
  if (units != NULL) {
    
  } else {
    
  }
  units_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), units);
  // @@protoc_insertion_point(field_set_allocated:bmi.GetTimeUnitsResponse.units)
}

// -------------------------------------------------------------------

// GetTimeStepResponse

// double interval = 1;
inline void GetTimeStepResponse::clear_interval() {
  interval_ = 0;
}
inline double GetTimeStepResponse::interval() const {
  // @@protoc_insertion_point(field_get:bmi.GetTimeStepResponse.interval)
  return interval_;
}
inline void GetTimeStepResponse::set_interval(double value) {
  
  interval_ = value;
  // @@protoc_insertion_point(field_set:bmi.GetTimeStepResponse.interval)
}

// -------------------------------------------------------------------

// GetTimeResponse

// double time = 1;
inline void GetTimeResponse::clear_time() {
  time_ = 0;
}
inline double GetTimeResponse::time() const {
  // @@protoc_insertion_point(field_get:bmi.GetTimeResponse.time)
  return time_;
}
inline void GetTimeResponse::set_time(double value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:bmi.GetTimeResponse.time)
}

// -------------------------------------------------------------------

// GetVarRequest

// string name = 1;
inline void GetVarRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetVarRequest::name() const {
  // @@protoc_insertion_point(field_get:bmi.GetVarRequest.name)
  return name_.GetNoArena();
}
inline void GetVarRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bmi.GetVarRequest.name)
}
#if LANG_CXX11
inline void GetVarRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bmi.GetVarRequest.name)
}
#endif
inline void GetVarRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bmi.GetVarRequest.name)
}
inline void GetVarRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bmi.GetVarRequest.name)
}
inline ::std::string* GetVarRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bmi.GetVarRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVarRequest::release_name() {
  // @@protoc_insertion_point(field_release:bmi.GetVarRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVarRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bmi.GetVarRequest.name)
}

// -------------------------------------------------------------------

// GetVarGridResponse

// int32 grid_id = 1;
inline void GetVarGridResponse::clear_grid_id() {
  grid_id_ = 0;
}
inline ::google::protobuf::int32 GetVarGridResponse::grid_id() const {
  // @@protoc_insertion_point(field_get:bmi.GetVarGridResponse.grid_id)
  return grid_id_;
}
inline void GetVarGridResponse::set_grid_id(::google::protobuf::int32 value) {
  
  grid_id_ = value;
  // @@protoc_insertion_point(field_set:bmi.GetVarGridResponse.grid_id)
}

// -------------------------------------------------------------------

// GetVarTypeResponse

// string type = 1;
inline void GetVarTypeResponse::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetVarTypeResponse::type() const {
  // @@protoc_insertion_point(field_get:bmi.GetVarTypeResponse.type)
  return type_.GetNoArena();
}
inline void GetVarTypeResponse::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bmi.GetVarTypeResponse.type)
}
#if LANG_CXX11
inline void GetVarTypeResponse::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bmi.GetVarTypeResponse.type)
}
#endif
inline void GetVarTypeResponse::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bmi.GetVarTypeResponse.type)
}
inline void GetVarTypeResponse::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bmi.GetVarTypeResponse.type)
}
inline ::std::string* GetVarTypeResponse::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:bmi.GetVarTypeResponse.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVarTypeResponse::release_type() {
  // @@protoc_insertion_point(field_release:bmi.GetVarTypeResponse.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVarTypeResponse::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:bmi.GetVarTypeResponse.type)
}

// -------------------------------------------------------------------

// GetVarItemSizeResponse

// int32 size = 1;
inline void GetVarItemSizeResponse::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 GetVarItemSizeResponse::size() const {
  // @@protoc_insertion_point(field_get:bmi.GetVarItemSizeResponse.size)
  return size_;
}
inline void GetVarItemSizeResponse::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:bmi.GetVarItemSizeResponse.size)
}

// -------------------------------------------------------------------

// GetVarUnitsResponse

// string units = 1;
inline void GetVarUnitsResponse::clear_units() {
  units_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetVarUnitsResponse::units() const {
  // @@protoc_insertion_point(field_get:bmi.GetVarUnitsResponse.units)
  return units_.GetNoArena();
}
inline void GetVarUnitsResponse::set_units(const ::std::string& value) {
  
  units_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bmi.GetVarUnitsResponse.units)
}
#if LANG_CXX11
inline void GetVarUnitsResponse::set_units(::std::string&& value) {
  
  units_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bmi.GetVarUnitsResponse.units)
}
#endif
inline void GetVarUnitsResponse::set_units(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  units_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bmi.GetVarUnitsResponse.units)
}
inline void GetVarUnitsResponse::set_units(const char* value, size_t size) {
  
  units_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bmi.GetVarUnitsResponse.units)
}
inline ::std::string* GetVarUnitsResponse::mutable_units() {
  
  // @@protoc_insertion_point(field_mutable:bmi.GetVarUnitsResponse.units)
  return units_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVarUnitsResponse::release_units() {
  // @@protoc_insertion_point(field_release:bmi.GetVarUnitsResponse.units)
  
  return units_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVarUnitsResponse::set_allocated_units(::std::string* units) {
  if (units != NULL) {
    
  } else {
    
  }
  units_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), units);
  // @@protoc_insertion_point(field_set_allocated:bmi.GetVarUnitsResponse.units)
}

// -------------------------------------------------------------------

// GetVarNBytesResponse

// int32 nbytes = 1;
inline void GetVarNBytesResponse::clear_nbytes() {
  nbytes_ = 0;
}
inline ::google::protobuf::int32 GetVarNBytesResponse::nbytes() const {
  // @@protoc_insertion_point(field_get:bmi.GetVarNBytesResponse.nbytes)
  return nbytes_;
}
inline void GetVarNBytesResponse::set_nbytes(::google::protobuf::int32 value) {
  
  nbytes_ = value;
  // @@protoc_insertion_point(field_set:bmi.GetVarNBytesResponse.nbytes)
}

// -------------------------------------------------------------------

// IntArrayMessage

// repeated int32 values = 1 [packed = true];
inline int IntArrayMessage::values_size() const {
  return values_.size();
}
inline void IntArrayMessage::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::int32 IntArrayMessage::values(int index) const {
  // @@protoc_insertion_point(field_get:bmi.IntArrayMessage.values)
  return values_.Get(index);
}
inline void IntArrayMessage::set_values(int index, ::google::protobuf::int32 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:bmi.IntArrayMessage.values)
}
inline void IntArrayMessage::add_values(::google::protobuf::int32 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:bmi.IntArrayMessage.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
IntArrayMessage::values() const {
  // @@protoc_insertion_point(field_list:bmi.IntArrayMessage.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
IntArrayMessage::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:bmi.IntArrayMessage.values)
  return &values_;
}

// -------------------------------------------------------------------

// FloatArrayMessage

// repeated float values = 1 [packed = true];
inline int FloatArrayMessage::values_size() const {
  return values_.size();
}
inline void FloatArrayMessage::clear_values() {
  values_.Clear();
}
inline float FloatArrayMessage::values(int index) const {
  // @@protoc_insertion_point(field_get:bmi.FloatArrayMessage.values)
  return values_.Get(index);
}
inline void FloatArrayMessage::set_values(int index, float value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:bmi.FloatArrayMessage.values)
}
inline void FloatArrayMessage::add_values(float value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:bmi.FloatArrayMessage.values)
}
inline const ::google::protobuf::RepeatedField< float >&
FloatArrayMessage::values() const {
  // @@protoc_insertion_point(field_list:bmi.FloatArrayMessage.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< float >*
FloatArrayMessage::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:bmi.FloatArrayMessage.values)
  return &values_;
}

// -------------------------------------------------------------------

// DoubleArrayMessage

// repeated double values = 1 [packed = true];
inline int DoubleArrayMessage::values_size() const {
  return values_.size();
}
inline void DoubleArrayMessage::clear_values() {
  values_.Clear();
}
inline double DoubleArrayMessage::values(int index) const {
  // @@protoc_insertion_point(field_get:bmi.DoubleArrayMessage.values)
  return values_.Get(index);
}
inline void DoubleArrayMessage::set_values(int index, double value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:bmi.DoubleArrayMessage.values)
}
inline void DoubleArrayMessage::add_values(double value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:bmi.DoubleArrayMessage.values)
}
inline const ::google::protobuf::RepeatedField< double >&
DoubleArrayMessage::values() const {
  // @@protoc_insertion_point(field_list:bmi.DoubleArrayMessage.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< double >*
DoubleArrayMessage::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:bmi.DoubleArrayMessage.values)
  return &values_;
}

// -------------------------------------------------------------------

// GetValueResponse

// .bmi.IntArrayMessage values_int = 1;
inline bool GetValueResponse::has_values_int() const {
  return values_case() == kValuesInt;
}
inline void GetValueResponse::set_has_values_int() {
  _oneof_case_[0] = kValuesInt;
}
inline void GetValueResponse::clear_values_int() {
  if (has_values_int()) {
    delete values_.values_int_;
    clear_has_values();
  }
}
inline ::bmi::IntArrayMessage* GetValueResponse::release_values_int() {
  // @@protoc_insertion_point(field_release:bmi.GetValueResponse.values_int)
  if (has_values_int()) {
    clear_has_values();
      ::bmi::IntArrayMessage* temp = values_.values_int_;
    values_.values_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bmi::IntArrayMessage& GetValueResponse::values_int() const {
  // @@protoc_insertion_point(field_get:bmi.GetValueResponse.values_int)
  return has_values_int()
      ? *values_.values_int_
      : *reinterpret_cast< ::bmi::IntArrayMessage*>(&::bmi::_IntArrayMessage_default_instance_);
}
inline ::bmi::IntArrayMessage* GetValueResponse::mutable_values_int() {
  if (!has_values_int()) {
    clear_values();
    set_has_values_int();
    values_.values_int_ = new ::bmi::IntArrayMessage;
  }
  // @@protoc_insertion_point(field_mutable:bmi.GetValueResponse.values_int)
  return values_.values_int_;
}

// .bmi.FloatArrayMessage values_float = 2;
inline bool GetValueResponse::has_values_float() const {
  return values_case() == kValuesFloat;
}
inline void GetValueResponse::set_has_values_float() {
  _oneof_case_[0] = kValuesFloat;
}
inline void GetValueResponse::clear_values_float() {
  if (has_values_float()) {
    delete values_.values_float_;
    clear_has_values();
  }
}
inline ::bmi::FloatArrayMessage* GetValueResponse::release_values_float() {
  // @@protoc_insertion_point(field_release:bmi.GetValueResponse.values_float)
  if (has_values_float()) {
    clear_has_values();
      ::bmi::FloatArrayMessage* temp = values_.values_float_;
    values_.values_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bmi::FloatArrayMessage& GetValueResponse::values_float() const {
  // @@protoc_insertion_point(field_get:bmi.GetValueResponse.values_float)
  return has_values_float()
      ? *values_.values_float_
      : *reinterpret_cast< ::bmi::FloatArrayMessage*>(&::bmi::_FloatArrayMessage_default_instance_);
}
inline ::bmi::FloatArrayMessage* GetValueResponse::mutable_values_float() {
  if (!has_values_float()) {
    clear_values();
    set_has_values_float();
    values_.values_float_ = new ::bmi::FloatArrayMessage;
  }
  // @@protoc_insertion_point(field_mutable:bmi.GetValueResponse.values_float)
  return values_.values_float_;
}

// .bmi.DoubleArrayMessage values_double = 3;
inline bool GetValueResponse::has_values_double() const {
  return values_case() == kValuesDouble;
}
inline void GetValueResponse::set_has_values_double() {
  _oneof_case_[0] = kValuesDouble;
}
inline void GetValueResponse::clear_values_double() {
  if (has_values_double()) {
    delete values_.values_double_;
    clear_has_values();
  }
}
inline ::bmi::DoubleArrayMessage* GetValueResponse::release_values_double() {
  // @@protoc_insertion_point(field_release:bmi.GetValueResponse.values_double)
  if (has_values_double()) {
    clear_has_values();
      ::bmi::DoubleArrayMessage* temp = values_.values_double_;
    values_.values_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bmi::DoubleArrayMessage& GetValueResponse::values_double() const {
  // @@protoc_insertion_point(field_get:bmi.GetValueResponse.values_double)
  return has_values_double()
      ? *values_.values_double_
      : *reinterpret_cast< ::bmi::DoubleArrayMessage*>(&::bmi::_DoubleArrayMessage_default_instance_);
}
inline ::bmi::DoubleArrayMessage* GetValueResponse::mutable_values_double() {
  if (!has_values_double()) {
    clear_values();
    set_has_values_double();
    values_.values_double_ = new ::bmi::DoubleArrayMessage;
  }
  // @@protoc_insertion_point(field_mutable:bmi.GetValueResponse.values_double)
  return values_.values_double_;
}

// repeated int32 shape = 4 [packed = true];
inline int GetValueResponse::shape_size() const {
  return shape_.size();
}
inline void GetValueResponse::clear_shape() {
  shape_.Clear();
}
inline ::google::protobuf::int32 GetValueResponse::shape(int index) const {
  // @@protoc_insertion_point(field_get:bmi.GetValueResponse.shape)
  return shape_.Get(index);
}
inline void GetValueResponse::set_shape(int index, ::google::protobuf::int32 value) {
  shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:bmi.GetValueResponse.shape)
}
inline void GetValueResponse::add_shape(::google::protobuf::int32 value) {
  shape_.Add(value);
  // @@protoc_insertion_point(field_add:bmi.GetValueResponse.shape)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GetValueResponse::shape() const {
  // @@protoc_insertion_point(field_list:bmi.GetValueResponse.shape)
  return shape_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GetValueResponse::mutable_shape() {
  // @@protoc_insertion_point(field_mutable_list:bmi.GetValueResponse.shape)
  return &shape_;
}

inline bool GetValueResponse::has_values() const {
  return values_case() != VALUES_NOT_SET;
}
inline void GetValueResponse::clear_has_values() {
  _oneof_case_[0] = VALUES_NOT_SET;
}
inline GetValueResponse::ValuesCase GetValueResponse::values_case() const {
  return GetValueResponse::ValuesCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetValueAtIndicesRequest

// string name = 1;
inline void GetValueAtIndicesRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetValueAtIndicesRequest::name() const {
  // @@protoc_insertion_point(field_get:bmi.GetValueAtIndicesRequest.name)
  return name_.GetNoArena();
}
inline void GetValueAtIndicesRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bmi.GetValueAtIndicesRequest.name)
}
#if LANG_CXX11
inline void GetValueAtIndicesRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bmi.GetValueAtIndicesRequest.name)
}
#endif
inline void GetValueAtIndicesRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bmi.GetValueAtIndicesRequest.name)
}
inline void GetValueAtIndicesRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bmi.GetValueAtIndicesRequest.name)
}
inline ::std::string* GetValueAtIndicesRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bmi.GetValueAtIndicesRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetValueAtIndicesRequest::release_name() {
  // @@protoc_insertion_point(field_release:bmi.GetValueAtIndicesRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetValueAtIndicesRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bmi.GetValueAtIndicesRequest.name)
}

// repeated int32 indices = 2 [packed = true];
inline int GetValueAtIndicesRequest::indices_size() const {
  return indices_.size();
}
inline void GetValueAtIndicesRequest::clear_indices() {
  indices_.Clear();
}
inline ::google::protobuf::int32 GetValueAtIndicesRequest::indices(int index) const {
  // @@protoc_insertion_point(field_get:bmi.GetValueAtIndicesRequest.indices)
  return indices_.Get(index);
}
inline void GetValueAtIndicesRequest::set_indices(int index, ::google::protobuf::int32 value) {
  indices_.Set(index, value);
  // @@protoc_insertion_point(field_set:bmi.GetValueAtIndicesRequest.indices)
}
inline void GetValueAtIndicesRequest::add_indices(::google::protobuf::int32 value) {
  indices_.Add(value);
  // @@protoc_insertion_point(field_add:bmi.GetValueAtIndicesRequest.indices)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GetValueAtIndicesRequest::indices() const {
  // @@protoc_insertion_point(field_list:bmi.GetValueAtIndicesRequest.indices)
  return indices_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GetValueAtIndicesRequest::mutable_indices() {
  // @@protoc_insertion_point(field_mutable_list:bmi.GetValueAtIndicesRequest.indices)
  return &indices_;
}

// int32 index_size = 3;
inline void GetValueAtIndicesRequest::clear_index_size() {
  index_size_ = 0;
}
inline ::google::protobuf::int32 GetValueAtIndicesRequest::index_size() const {
  // @@protoc_insertion_point(field_get:bmi.GetValueAtIndicesRequest.index_size)
  return index_size_;
}
inline void GetValueAtIndicesRequest::set_index_size(::google::protobuf::int32 value) {
  
  index_size_ = value;
  // @@protoc_insertion_point(field_set:bmi.GetValueAtIndicesRequest.index_size)
}

// -------------------------------------------------------------------

// GetValueAtIndicesResponse

// .bmi.IntArrayMessage values_int = 1;
inline bool GetValueAtIndicesResponse::has_values_int() const {
  return values_case() == kValuesInt;
}
inline void GetValueAtIndicesResponse::set_has_values_int() {
  _oneof_case_[0] = kValuesInt;
}
inline void GetValueAtIndicesResponse::clear_values_int() {
  if (has_values_int()) {
    delete values_.values_int_;
    clear_has_values();
  }
}
inline ::bmi::IntArrayMessage* GetValueAtIndicesResponse::release_values_int() {
  // @@protoc_insertion_point(field_release:bmi.GetValueAtIndicesResponse.values_int)
  if (has_values_int()) {
    clear_has_values();
      ::bmi::IntArrayMessage* temp = values_.values_int_;
    values_.values_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bmi::IntArrayMessage& GetValueAtIndicesResponse::values_int() const {
  // @@protoc_insertion_point(field_get:bmi.GetValueAtIndicesResponse.values_int)
  return has_values_int()
      ? *values_.values_int_
      : *reinterpret_cast< ::bmi::IntArrayMessage*>(&::bmi::_IntArrayMessage_default_instance_);
}
inline ::bmi::IntArrayMessage* GetValueAtIndicesResponse::mutable_values_int() {
  if (!has_values_int()) {
    clear_values();
    set_has_values_int();
    values_.values_int_ = new ::bmi::IntArrayMessage;
  }
  // @@protoc_insertion_point(field_mutable:bmi.GetValueAtIndicesResponse.values_int)
  return values_.values_int_;
}

// .bmi.FloatArrayMessage values_float = 2;
inline bool GetValueAtIndicesResponse::has_values_float() const {
  return values_case() == kValuesFloat;
}
inline void GetValueAtIndicesResponse::set_has_values_float() {
  _oneof_case_[0] = kValuesFloat;
}
inline void GetValueAtIndicesResponse::clear_values_float() {
  if (has_values_float()) {
    delete values_.values_float_;
    clear_has_values();
  }
}
inline ::bmi::FloatArrayMessage* GetValueAtIndicesResponse::release_values_float() {
  // @@protoc_insertion_point(field_release:bmi.GetValueAtIndicesResponse.values_float)
  if (has_values_float()) {
    clear_has_values();
      ::bmi::FloatArrayMessage* temp = values_.values_float_;
    values_.values_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bmi::FloatArrayMessage& GetValueAtIndicesResponse::values_float() const {
  // @@protoc_insertion_point(field_get:bmi.GetValueAtIndicesResponse.values_float)
  return has_values_float()
      ? *values_.values_float_
      : *reinterpret_cast< ::bmi::FloatArrayMessage*>(&::bmi::_FloatArrayMessage_default_instance_);
}
inline ::bmi::FloatArrayMessage* GetValueAtIndicesResponse::mutable_values_float() {
  if (!has_values_float()) {
    clear_values();
    set_has_values_float();
    values_.values_float_ = new ::bmi::FloatArrayMessage;
  }
  // @@protoc_insertion_point(field_mutable:bmi.GetValueAtIndicesResponse.values_float)
  return values_.values_float_;
}

// .bmi.DoubleArrayMessage values_double = 3;
inline bool GetValueAtIndicesResponse::has_values_double() const {
  return values_case() == kValuesDouble;
}
inline void GetValueAtIndicesResponse::set_has_values_double() {
  _oneof_case_[0] = kValuesDouble;
}
inline void GetValueAtIndicesResponse::clear_values_double() {
  if (has_values_double()) {
    delete values_.values_double_;
    clear_has_values();
  }
}
inline ::bmi::DoubleArrayMessage* GetValueAtIndicesResponse::release_values_double() {
  // @@protoc_insertion_point(field_release:bmi.GetValueAtIndicesResponse.values_double)
  if (has_values_double()) {
    clear_has_values();
      ::bmi::DoubleArrayMessage* temp = values_.values_double_;
    values_.values_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bmi::DoubleArrayMessage& GetValueAtIndicesResponse::values_double() const {
  // @@protoc_insertion_point(field_get:bmi.GetValueAtIndicesResponse.values_double)
  return has_values_double()
      ? *values_.values_double_
      : *reinterpret_cast< ::bmi::DoubleArrayMessage*>(&::bmi::_DoubleArrayMessage_default_instance_);
}
inline ::bmi::DoubleArrayMessage* GetValueAtIndicesResponse::mutable_values_double() {
  if (!has_values_double()) {
    clear_values();
    set_has_values_double();
    values_.values_double_ = new ::bmi::DoubleArrayMessage;
  }
  // @@protoc_insertion_point(field_mutable:bmi.GetValueAtIndicesResponse.values_double)
  return values_.values_double_;
}

// repeated int32 shape = 4 [packed = true];
inline int GetValueAtIndicesResponse::shape_size() const {
  return shape_.size();
}
inline void GetValueAtIndicesResponse::clear_shape() {
  shape_.Clear();
}
inline ::google::protobuf::int32 GetValueAtIndicesResponse::shape(int index) const {
  // @@protoc_insertion_point(field_get:bmi.GetValueAtIndicesResponse.shape)
  return shape_.Get(index);
}
inline void GetValueAtIndicesResponse::set_shape(int index, ::google::protobuf::int32 value) {
  shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:bmi.GetValueAtIndicesResponse.shape)
}
inline void GetValueAtIndicesResponse::add_shape(::google::protobuf::int32 value) {
  shape_.Add(value);
  // @@protoc_insertion_point(field_add:bmi.GetValueAtIndicesResponse.shape)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GetValueAtIndicesResponse::shape() const {
  // @@protoc_insertion_point(field_list:bmi.GetValueAtIndicesResponse.shape)
  return shape_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GetValueAtIndicesResponse::mutable_shape() {
  // @@protoc_insertion_point(field_mutable_list:bmi.GetValueAtIndicesResponse.shape)
  return &shape_;
}

inline bool GetValueAtIndicesResponse::has_values() const {
  return values_case() != VALUES_NOT_SET;
}
inline void GetValueAtIndicesResponse::clear_has_values() {
  _oneof_case_[0] = VALUES_NOT_SET;
}
inline GetValueAtIndicesResponse::ValuesCase GetValueAtIndicesResponse::values_case() const {
  return GetValueAtIndicesResponse::ValuesCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SetValueRequest

// string name = 1;
inline void SetValueRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetValueRequest::name() const {
  // @@protoc_insertion_point(field_get:bmi.SetValueRequest.name)
  return name_.GetNoArena();
}
inline void SetValueRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bmi.SetValueRequest.name)
}
#if LANG_CXX11
inline void SetValueRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bmi.SetValueRequest.name)
}
#endif
inline void SetValueRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bmi.SetValueRequest.name)
}
inline void SetValueRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bmi.SetValueRequest.name)
}
inline ::std::string* SetValueRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bmi.SetValueRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetValueRequest::release_name() {
  // @@protoc_insertion_point(field_release:bmi.SetValueRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetValueRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bmi.SetValueRequest.name)
}

// .bmi.IntArrayMessage values_int = 2;
inline bool SetValueRequest::has_values_int() const {
  return values_case() == kValuesInt;
}
inline void SetValueRequest::set_has_values_int() {
  _oneof_case_[0] = kValuesInt;
}
inline void SetValueRequest::clear_values_int() {
  if (has_values_int()) {
    delete values_.values_int_;
    clear_has_values();
  }
}
inline ::bmi::IntArrayMessage* SetValueRequest::release_values_int() {
  // @@protoc_insertion_point(field_release:bmi.SetValueRequest.values_int)
  if (has_values_int()) {
    clear_has_values();
      ::bmi::IntArrayMessage* temp = values_.values_int_;
    values_.values_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bmi::IntArrayMessage& SetValueRequest::values_int() const {
  // @@protoc_insertion_point(field_get:bmi.SetValueRequest.values_int)
  return has_values_int()
      ? *values_.values_int_
      : *reinterpret_cast< ::bmi::IntArrayMessage*>(&::bmi::_IntArrayMessage_default_instance_);
}
inline ::bmi::IntArrayMessage* SetValueRequest::mutable_values_int() {
  if (!has_values_int()) {
    clear_values();
    set_has_values_int();
    values_.values_int_ = new ::bmi::IntArrayMessage;
  }
  // @@protoc_insertion_point(field_mutable:bmi.SetValueRequest.values_int)
  return values_.values_int_;
}

// .bmi.FloatArrayMessage values_float = 3;
inline bool SetValueRequest::has_values_float() const {
  return values_case() == kValuesFloat;
}
inline void SetValueRequest::set_has_values_float() {
  _oneof_case_[0] = kValuesFloat;
}
inline void SetValueRequest::clear_values_float() {
  if (has_values_float()) {
    delete values_.values_float_;
    clear_has_values();
  }
}
inline ::bmi::FloatArrayMessage* SetValueRequest::release_values_float() {
  // @@protoc_insertion_point(field_release:bmi.SetValueRequest.values_float)
  if (has_values_float()) {
    clear_has_values();
      ::bmi::FloatArrayMessage* temp = values_.values_float_;
    values_.values_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bmi::FloatArrayMessage& SetValueRequest::values_float() const {
  // @@protoc_insertion_point(field_get:bmi.SetValueRequest.values_float)
  return has_values_float()
      ? *values_.values_float_
      : *reinterpret_cast< ::bmi::FloatArrayMessage*>(&::bmi::_FloatArrayMessage_default_instance_);
}
inline ::bmi::FloatArrayMessage* SetValueRequest::mutable_values_float() {
  if (!has_values_float()) {
    clear_values();
    set_has_values_float();
    values_.values_float_ = new ::bmi::FloatArrayMessage;
  }
  // @@protoc_insertion_point(field_mutable:bmi.SetValueRequest.values_float)
  return values_.values_float_;
}

// .bmi.DoubleArrayMessage values_double = 4;
inline bool SetValueRequest::has_values_double() const {
  return values_case() == kValuesDouble;
}
inline void SetValueRequest::set_has_values_double() {
  _oneof_case_[0] = kValuesDouble;
}
inline void SetValueRequest::clear_values_double() {
  if (has_values_double()) {
    delete values_.values_double_;
    clear_has_values();
  }
}
inline ::bmi::DoubleArrayMessage* SetValueRequest::release_values_double() {
  // @@protoc_insertion_point(field_release:bmi.SetValueRequest.values_double)
  if (has_values_double()) {
    clear_has_values();
      ::bmi::DoubleArrayMessage* temp = values_.values_double_;
    values_.values_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bmi::DoubleArrayMessage& SetValueRequest::values_double() const {
  // @@protoc_insertion_point(field_get:bmi.SetValueRequest.values_double)
  return has_values_double()
      ? *values_.values_double_
      : *reinterpret_cast< ::bmi::DoubleArrayMessage*>(&::bmi::_DoubleArrayMessage_default_instance_);
}
inline ::bmi::DoubleArrayMessage* SetValueRequest::mutable_values_double() {
  if (!has_values_double()) {
    clear_values();
    set_has_values_double();
    values_.values_double_ = new ::bmi::DoubleArrayMessage;
  }
  // @@protoc_insertion_point(field_mutable:bmi.SetValueRequest.values_double)
  return values_.values_double_;
}

// repeated int32 shape = 5 [packed = true];
inline int SetValueRequest::shape_size() const {
  return shape_.size();
}
inline void SetValueRequest::clear_shape() {
  shape_.Clear();
}
inline ::google::protobuf::int32 SetValueRequest::shape(int index) const {
  // @@protoc_insertion_point(field_get:bmi.SetValueRequest.shape)
  return shape_.Get(index);
}
inline void SetValueRequest::set_shape(int index, ::google::protobuf::int32 value) {
  shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:bmi.SetValueRequest.shape)
}
inline void SetValueRequest::add_shape(::google::protobuf::int32 value) {
  shape_.Add(value);
  // @@protoc_insertion_point(field_add:bmi.SetValueRequest.shape)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SetValueRequest::shape() const {
  // @@protoc_insertion_point(field_list:bmi.SetValueRequest.shape)
  return shape_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SetValueRequest::mutable_shape() {
  // @@protoc_insertion_point(field_mutable_list:bmi.SetValueRequest.shape)
  return &shape_;
}

inline bool SetValueRequest::has_values() const {
  return values_case() != VALUES_NOT_SET;
}
inline void SetValueRequest::clear_has_values() {
  _oneof_case_[0] = VALUES_NOT_SET;
}
inline SetValueRequest::ValuesCase SetValueRequest::values_case() const {
  return SetValueRequest::ValuesCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SetValuePtrRequest

// string name = 1;
inline void SetValuePtrRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetValuePtrRequest::name() const {
  // @@protoc_insertion_point(field_get:bmi.SetValuePtrRequest.name)
  return name_.GetNoArena();
}
inline void SetValuePtrRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bmi.SetValuePtrRequest.name)
}
#if LANG_CXX11
inline void SetValuePtrRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bmi.SetValuePtrRequest.name)
}
#endif
inline void SetValuePtrRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bmi.SetValuePtrRequest.name)
}
inline void SetValuePtrRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bmi.SetValuePtrRequest.name)
}
inline ::std::string* SetValuePtrRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bmi.SetValuePtrRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetValuePtrRequest::release_name() {
  // @@protoc_insertion_point(field_release:bmi.SetValuePtrRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetValuePtrRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bmi.SetValuePtrRequest.name)
}

// int32 ref = 2;
inline void SetValuePtrRequest::clear_ref() {
  ref_ = 0;
}
inline ::google::protobuf::int32 SetValuePtrRequest::ref() const {
  // @@protoc_insertion_point(field_get:bmi.SetValuePtrRequest.ref)
  return ref_;
}
inline void SetValuePtrRequest::set_ref(::google::protobuf::int32 value) {
  
  ref_ = value;
  // @@protoc_insertion_point(field_set:bmi.SetValuePtrRequest.ref)
}

// -------------------------------------------------------------------

// SetValueAtIndicesRequest

// string name = 1;
inline void SetValueAtIndicesRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetValueAtIndicesRequest::name() const {
  // @@protoc_insertion_point(field_get:bmi.SetValueAtIndicesRequest.name)
  return name_.GetNoArena();
}
inline void SetValueAtIndicesRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bmi.SetValueAtIndicesRequest.name)
}
#if LANG_CXX11
inline void SetValueAtIndicesRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bmi.SetValueAtIndicesRequest.name)
}
#endif
inline void SetValueAtIndicesRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bmi.SetValueAtIndicesRequest.name)
}
inline void SetValueAtIndicesRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bmi.SetValueAtIndicesRequest.name)
}
inline ::std::string* SetValueAtIndicesRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bmi.SetValueAtIndicesRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetValueAtIndicesRequest::release_name() {
  // @@protoc_insertion_point(field_release:bmi.SetValueAtIndicesRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetValueAtIndicesRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bmi.SetValueAtIndicesRequest.name)
}

// repeated int32 indices = 2 [packed = true];
inline int SetValueAtIndicesRequest::indices_size() const {
  return indices_.size();
}
inline void SetValueAtIndicesRequest::clear_indices() {
  indices_.Clear();
}
inline ::google::protobuf::int32 SetValueAtIndicesRequest::indices(int index) const {
  // @@protoc_insertion_point(field_get:bmi.SetValueAtIndicesRequest.indices)
  return indices_.Get(index);
}
inline void SetValueAtIndicesRequest::set_indices(int index, ::google::protobuf::int32 value) {
  indices_.Set(index, value);
  // @@protoc_insertion_point(field_set:bmi.SetValueAtIndicesRequest.indices)
}
inline void SetValueAtIndicesRequest::add_indices(::google::protobuf::int32 value) {
  indices_.Add(value);
  // @@protoc_insertion_point(field_add:bmi.SetValueAtIndicesRequest.indices)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SetValueAtIndicesRequest::indices() const {
  // @@protoc_insertion_point(field_list:bmi.SetValueAtIndicesRequest.indices)
  return indices_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SetValueAtIndicesRequest::mutable_indices() {
  // @@protoc_insertion_point(field_mutable_list:bmi.SetValueAtIndicesRequest.indices)
  return &indices_;
}

// .bmi.IntArrayMessage values_int = 3;
inline bool SetValueAtIndicesRequest::has_values_int() const {
  return values_case() == kValuesInt;
}
inline void SetValueAtIndicesRequest::set_has_values_int() {
  _oneof_case_[0] = kValuesInt;
}
inline void SetValueAtIndicesRequest::clear_values_int() {
  if (has_values_int()) {
    delete values_.values_int_;
    clear_has_values();
  }
}
inline ::bmi::IntArrayMessage* SetValueAtIndicesRequest::release_values_int() {
  // @@protoc_insertion_point(field_release:bmi.SetValueAtIndicesRequest.values_int)
  if (has_values_int()) {
    clear_has_values();
      ::bmi::IntArrayMessage* temp = values_.values_int_;
    values_.values_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bmi::IntArrayMessage& SetValueAtIndicesRequest::values_int() const {
  // @@protoc_insertion_point(field_get:bmi.SetValueAtIndicesRequest.values_int)
  return has_values_int()
      ? *values_.values_int_
      : *reinterpret_cast< ::bmi::IntArrayMessage*>(&::bmi::_IntArrayMessage_default_instance_);
}
inline ::bmi::IntArrayMessage* SetValueAtIndicesRequest::mutable_values_int() {
  if (!has_values_int()) {
    clear_values();
    set_has_values_int();
    values_.values_int_ = new ::bmi::IntArrayMessage;
  }
  // @@protoc_insertion_point(field_mutable:bmi.SetValueAtIndicesRequest.values_int)
  return values_.values_int_;
}

// .bmi.FloatArrayMessage values_float = 4;
inline bool SetValueAtIndicesRequest::has_values_float() const {
  return values_case() == kValuesFloat;
}
inline void SetValueAtIndicesRequest::set_has_values_float() {
  _oneof_case_[0] = kValuesFloat;
}
inline void SetValueAtIndicesRequest::clear_values_float() {
  if (has_values_float()) {
    delete values_.values_float_;
    clear_has_values();
  }
}
inline ::bmi::FloatArrayMessage* SetValueAtIndicesRequest::release_values_float() {
  // @@protoc_insertion_point(field_release:bmi.SetValueAtIndicesRequest.values_float)
  if (has_values_float()) {
    clear_has_values();
      ::bmi::FloatArrayMessage* temp = values_.values_float_;
    values_.values_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bmi::FloatArrayMessage& SetValueAtIndicesRequest::values_float() const {
  // @@protoc_insertion_point(field_get:bmi.SetValueAtIndicesRequest.values_float)
  return has_values_float()
      ? *values_.values_float_
      : *reinterpret_cast< ::bmi::FloatArrayMessage*>(&::bmi::_FloatArrayMessage_default_instance_);
}
inline ::bmi::FloatArrayMessage* SetValueAtIndicesRequest::mutable_values_float() {
  if (!has_values_float()) {
    clear_values();
    set_has_values_float();
    values_.values_float_ = new ::bmi::FloatArrayMessage;
  }
  // @@protoc_insertion_point(field_mutable:bmi.SetValueAtIndicesRequest.values_float)
  return values_.values_float_;
}

// .bmi.DoubleArrayMessage values_double = 5;
inline bool SetValueAtIndicesRequest::has_values_double() const {
  return values_case() == kValuesDouble;
}
inline void SetValueAtIndicesRequest::set_has_values_double() {
  _oneof_case_[0] = kValuesDouble;
}
inline void SetValueAtIndicesRequest::clear_values_double() {
  if (has_values_double()) {
    delete values_.values_double_;
    clear_has_values();
  }
}
inline ::bmi::DoubleArrayMessage* SetValueAtIndicesRequest::release_values_double() {
  // @@protoc_insertion_point(field_release:bmi.SetValueAtIndicesRequest.values_double)
  if (has_values_double()) {
    clear_has_values();
      ::bmi::DoubleArrayMessage* temp = values_.values_double_;
    values_.values_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bmi::DoubleArrayMessage& SetValueAtIndicesRequest::values_double() const {
  // @@protoc_insertion_point(field_get:bmi.SetValueAtIndicesRequest.values_double)
  return has_values_double()
      ? *values_.values_double_
      : *reinterpret_cast< ::bmi::DoubleArrayMessage*>(&::bmi::_DoubleArrayMessage_default_instance_);
}
inline ::bmi::DoubleArrayMessage* SetValueAtIndicesRequest::mutable_values_double() {
  if (!has_values_double()) {
    clear_values();
    set_has_values_double();
    values_.values_double_ = new ::bmi::DoubleArrayMessage;
  }
  // @@protoc_insertion_point(field_mutable:bmi.SetValueAtIndicesRequest.values_double)
  return values_.values_double_;
}

// int32 index_size = 6;
inline void SetValueAtIndicesRequest::clear_index_size() {
  index_size_ = 0;
}
inline ::google::protobuf::int32 SetValueAtIndicesRequest::index_size() const {
  // @@protoc_insertion_point(field_get:bmi.SetValueAtIndicesRequest.index_size)
  return index_size_;
}
inline void SetValueAtIndicesRequest::set_index_size(::google::protobuf::int32 value) {
  
  index_size_ = value;
  // @@protoc_insertion_point(field_set:bmi.SetValueAtIndicesRequest.index_size)
}

inline bool SetValueAtIndicesRequest::has_values() const {
  return values_case() != VALUES_NOT_SET;
}
inline void SetValueAtIndicesRequest::clear_has_values() {
  _oneof_case_[0] = VALUES_NOT_SET;
}
inline SetValueAtIndicesRequest::ValuesCase SetValueAtIndicesRequest::values_case() const {
  return SetValueAtIndicesRequest::ValuesCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GridRequest

// int32 grid_id = 1;
inline void GridRequest::clear_grid_id() {
  grid_id_ = 0;
}
inline ::google::protobuf::int32 GridRequest::grid_id() const {
  // @@protoc_insertion_point(field_get:bmi.GridRequest.grid_id)
  return grid_id_;
}
inline void GridRequest::set_grid_id(::google::protobuf::int32 value) {
  
  grid_id_ = value;
  // @@protoc_insertion_point(field_set:bmi.GridRequest.grid_id)
}

// -------------------------------------------------------------------

// GetGridSizeResponse

// int32 size = 1;
inline void GetGridSizeResponse::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 GetGridSizeResponse::size() const {
  // @@protoc_insertion_point(field_get:bmi.GetGridSizeResponse.size)
  return size_;
}
inline void GetGridSizeResponse::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:bmi.GetGridSizeResponse.size)
}

// -------------------------------------------------------------------

// GetGridRankResponse

// int32 rank = 1;
inline void GetGridRankResponse::clear_rank() {
  rank_ = 0;
}
inline ::google::protobuf::int32 GetGridRankResponse::rank() const {
  // @@protoc_insertion_point(field_get:bmi.GetGridRankResponse.rank)
  return rank_;
}
inline void GetGridRankResponse::set_rank(::google::protobuf::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:bmi.GetGridRankResponse.rank)
}

// -------------------------------------------------------------------

// GetGridTypeResponse

// string type = 1;
inline void GetGridTypeResponse::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGridTypeResponse::type() const {
  // @@protoc_insertion_point(field_get:bmi.GetGridTypeResponse.type)
  return type_.GetNoArena();
}
inline void GetGridTypeResponse::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bmi.GetGridTypeResponse.type)
}
#if LANG_CXX11
inline void GetGridTypeResponse::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bmi.GetGridTypeResponse.type)
}
#endif
inline void GetGridTypeResponse::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bmi.GetGridTypeResponse.type)
}
inline void GetGridTypeResponse::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bmi.GetGridTypeResponse.type)
}
inline ::std::string* GetGridTypeResponse::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:bmi.GetGridTypeResponse.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGridTypeResponse::release_type() {
  // @@protoc_insertion_point(field_release:bmi.GetGridTypeResponse.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGridTypeResponse::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:bmi.GetGridTypeResponse.type)
}

// -------------------------------------------------------------------

// GetGridShapeResponse

// repeated int32 shape = 1 [packed = true];
inline int GetGridShapeResponse::shape_size() const {
  return shape_.size();
}
inline void GetGridShapeResponse::clear_shape() {
  shape_.Clear();
}
inline ::google::protobuf::int32 GetGridShapeResponse::shape(int index) const {
  // @@protoc_insertion_point(field_get:bmi.GetGridShapeResponse.shape)
  return shape_.Get(index);
}
inline void GetGridShapeResponse::set_shape(int index, ::google::protobuf::int32 value) {
  shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:bmi.GetGridShapeResponse.shape)
}
inline void GetGridShapeResponse::add_shape(::google::protobuf::int32 value) {
  shape_.Add(value);
  // @@protoc_insertion_point(field_add:bmi.GetGridShapeResponse.shape)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GetGridShapeResponse::shape() const {
  // @@protoc_insertion_point(field_list:bmi.GetGridShapeResponse.shape)
  return shape_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GetGridShapeResponse::mutable_shape() {
  // @@protoc_insertion_point(field_mutable_list:bmi.GetGridShapeResponse.shape)
  return &shape_;
}

// -------------------------------------------------------------------

// GetGridSpacingResponse

// repeated double spacing = 1 [packed = true];
inline int GetGridSpacingResponse::spacing_size() const {
  return spacing_.size();
}
inline void GetGridSpacingResponse::clear_spacing() {
  spacing_.Clear();
}
inline double GetGridSpacingResponse::spacing(int index) const {
  // @@protoc_insertion_point(field_get:bmi.GetGridSpacingResponse.spacing)
  return spacing_.Get(index);
}
inline void GetGridSpacingResponse::set_spacing(int index, double value) {
  spacing_.Set(index, value);
  // @@protoc_insertion_point(field_set:bmi.GetGridSpacingResponse.spacing)
}
inline void GetGridSpacingResponse::add_spacing(double value) {
  spacing_.Add(value);
  // @@protoc_insertion_point(field_add:bmi.GetGridSpacingResponse.spacing)
}
inline const ::google::protobuf::RepeatedField< double >&
GetGridSpacingResponse::spacing() const {
  // @@protoc_insertion_point(field_list:bmi.GetGridSpacingResponse.spacing)
  return spacing_;
}
inline ::google::protobuf::RepeatedField< double >*
GetGridSpacingResponse::mutable_spacing() {
  // @@protoc_insertion_point(field_mutable_list:bmi.GetGridSpacingResponse.spacing)
  return &spacing_;
}

// -------------------------------------------------------------------

// GetGridOriginResponse

// repeated double origin = 1 [packed = true];
inline int GetGridOriginResponse::origin_size() const {
  return origin_.size();
}
inline void GetGridOriginResponse::clear_origin() {
  origin_.Clear();
}
inline double GetGridOriginResponse::origin(int index) const {
  // @@protoc_insertion_point(field_get:bmi.GetGridOriginResponse.origin)
  return origin_.Get(index);
}
inline void GetGridOriginResponse::set_origin(int index, double value) {
  origin_.Set(index, value);
  // @@protoc_insertion_point(field_set:bmi.GetGridOriginResponse.origin)
}
inline void GetGridOriginResponse::add_origin(double value) {
  origin_.Add(value);
  // @@protoc_insertion_point(field_add:bmi.GetGridOriginResponse.origin)
}
inline const ::google::protobuf::RepeatedField< double >&
GetGridOriginResponse::origin() const {
  // @@protoc_insertion_point(field_list:bmi.GetGridOriginResponse.origin)
  return origin_;
}
inline ::google::protobuf::RepeatedField< double >*
GetGridOriginResponse::mutable_origin() {
  // @@protoc_insertion_point(field_mutable_list:bmi.GetGridOriginResponse.origin)
  return &origin_;
}

// -------------------------------------------------------------------

// GetGridPointsResponse

// repeated double coordinates = 1 [packed = true];
inline int GetGridPointsResponse::coordinates_size() const {
  return coordinates_.size();
}
inline void GetGridPointsResponse::clear_coordinates() {
  coordinates_.Clear();
}
inline double GetGridPointsResponse::coordinates(int index) const {
  // @@protoc_insertion_point(field_get:bmi.GetGridPointsResponse.coordinates)
  return coordinates_.Get(index);
}
inline void GetGridPointsResponse::set_coordinates(int index, double value) {
  coordinates_.Set(index, value);
  // @@protoc_insertion_point(field_set:bmi.GetGridPointsResponse.coordinates)
}
inline void GetGridPointsResponse::add_coordinates(double value) {
  coordinates_.Add(value);
  // @@protoc_insertion_point(field_add:bmi.GetGridPointsResponse.coordinates)
}
inline const ::google::protobuf::RepeatedField< double >&
GetGridPointsResponse::coordinates() const {
  // @@protoc_insertion_point(field_list:bmi.GetGridPointsResponse.coordinates)
  return coordinates_;
}
inline ::google::protobuf::RepeatedField< double >*
GetGridPointsResponse::mutable_coordinates() {
  // @@protoc_insertion_point(field_mutable_list:bmi.GetGridPointsResponse.coordinates)
  return &coordinates_;
}

// -------------------------------------------------------------------

// GetCountResponse

// int32 count = 1;
inline void GetCountResponse::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 GetCountResponse::count() const {
  // @@protoc_insertion_point(field_get:bmi.GetCountResponse.count)
  return count_;
}
inline void GetCountResponse::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:bmi.GetCountResponse.count)
}

// -------------------------------------------------------------------

// GetGridConnectivityResponse

// repeated int32 links = 1 [packed = true];
inline int GetGridConnectivityResponse::links_size() const {
  return links_.size();
}
inline void GetGridConnectivityResponse::clear_links() {
  links_.Clear();
}
inline ::google::protobuf::int32 GetGridConnectivityResponse::links(int index) const {
  // @@protoc_insertion_point(field_get:bmi.GetGridConnectivityResponse.links)
  return links_.Get(index);
}
inline void GetGridConnectivityResponse::set_links(int index, ::google::protobuf::int32 value) {
  links_.Set(index, value);
  // @@protoc_insertion_point(field_set:bmi.GetGridConnectivityResponse.links)
}
inline void GetGridConnectivityResponse::add_links(::google::protobuf::int32 value) {
  links_.Add(value);
  // @@protoc_insertion_point(field_add:bmi.GetGridConnectivityResponse.links)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GetGridConnectivityResponse::links() const {
  // @@protoc_insertion_point(field_list:bmi.GetGridConnectivityResponse.links)
  return links_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GetGridConnectivityResponse::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:bmi.GetGridConnectivityResponse.links)
  return &links_;
}

// -------------------------------------------------------------------

// GetGridOffsetResponse

// repeated int32 offsets = 1 [packed = true];
inline int GetGridOffsetResponse::offsets_size() const {
  return offsets_.size();
}
inline void GetGridOffsetResponse::clear_offsets() {
  offsets_.Clear();
}
inline ::google::protobuf::int32 GetGridOffsetResponse::offsets(int index) const {
  // @@protoc_insertion_point(field_get:bmi.GetGridOffsetResponse.offsets)
  return offsets_.Get(index);
}
inline void GetGridOffsetResponse::set_offsets(int index, ::google::protobuf::int32 value) {
  offsets_.Set(index, value);
  // @@protoc_insertion_point(field_set:bmi.GetGridOffsetResponse.offsets)
}
inline void GetGridOffsetResponse::add_offsets(::google::protobuf::int32 value) {
  offsets_.Add(value);
  // @@protoc_insertion_point(field_add:bmi.GetGridOffsetResponse.offsets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GetGridOffsetResponse::offsets() const {
  // @@protoc_insertion_point(field_list:bmi.GetGridOffsetResponse.offsets)
  return offsets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GetGridOffsetResponse::mutable_offsets() {
  // @@protoc_insertion_point(field_mutable_list:bmi.GetGridOffsetResponse.offsets)
  return &offsets_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bmi

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bmi_2eproto__INCLUDED
